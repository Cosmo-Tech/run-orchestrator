{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Run Template Orchestrator","text":"<p>This repository contains the new Run Template Orchestrator used in the latest Cosmotech Solutions</p>"},{"location":"#installation","title":"Installation","text":"<p>You need to add the orchestrator to the environment you want to use it on.</p> <p>The following guide will suppose you have a CosmoTech Project called <code>MyProject</code> which is in the folder <code>~/MyProject</code></p> <p>It will also suppose you have a build version of the CosmoTech SDK in the folder <code>~/Cosmotech/Studio</code></p> <p>Create a virtual environment and add dependencies (in bash)</p> <p><pre><code># First move to your project folder\ncd ~/MyProject\n# Next create and activate a venv (here .venv)\npython -m venv .venv\nsource .venv/bin/activate\n# Finally install the dependencies for your project (they should be in code/requirements.txt)\npip install -r code/requirements.txt\n</code></pre> To add python wrappers of the Cosmo Tech simulators you need to update your <code>PYTHONPATH</code> before running commands</p> Use <code>PYTHONPATH</code> for Simulators wrappingUse <code>csmcli</code> <pre><code># Update your python path with the bindings from the sdk\nexport PYTHONPATH=$PYTHONPATH:~/Cosmotech/Studio/lib/python/site-packages\n# Add the local wrappers for your solution to the python path\nexport PYTHONPATH=$PYTHONPATH:~/MyProject/Generated/Build/Wrapping:~/MyProject/Generated/Build/Lib\n# Now further commands will have the PYTHONPATH correctly set\ncsm-orc run ...\n</code></pre> <p>If you use the Cosmotech CLI <code>csmcli</code> you can replace the use of the <code>PYTHONPATH</code> environment variable by calls to <code>csm exec</code> <pre><code># prepending your command by using csm exec will fully set your environment with complementary variables\ncsm exec csm-orc run ...\n</code></pre></p> <p>After all those commands you environment should be ready for a test, but first let's install the repository</p> Install from sourcesInstall using Pypi <p>Install the orchestrator from git sources</p> <pre><code>pip install git+ssh://git@github.com/Cosmo-Tech/run-orchestrator.git\n</code></pre> <p>Install the orchestrator from local sources</p> <pre><code>git clone ssh://git@github.com/Cosmo-Tech/run-orchestrator.git\npip install ./run-orchestrator\n</code></pre> <p>Install using pip</p> <pre><code>pip install cosmotech-run-orchestrator\n</code></pre> <p>After installation a few commands are made available, documentation for each is available on the commands documentation page</p> <p>Autocompletion</p> <p>Run the following command <pre><code>_CSM_ORC_COMPLETE=bash_source csm-orc &gt; ~/.csm-orc-complete.bash\n</code></pre> then add the following line at the end of your <code>.bashrc</code> file <pre><code>. ~/.csm-orc-complete.bash\n</code></pre></p>"},{"location":"License/","title":"License","text":"<p>Copyright - 2023 - 2024 - Cosmo Tech</p> <p>You are authorized to use this Cosmo Tech software following the execution of a specific agreement with Cosmo Tech or with an authorized licensee of Cosmo Tech.</p> <p>Accordingly you should refer to this specific agreement for the purpose of the extent of the use that is permitted. This use shall mainly consist in using, displaying and executing the Cosmo Tech software for your own needs.</p> <p>Except otherwise provided in the above-mentioned specific agreement: - you are not allowed to use this Cosmo Tech software for commercial purpose or to redistribute it without prior authorization from Cosmo Tech; - you are not allowed to copy, duplicate, modify, adapt and translate this Cosmo Tech software except as authorized under section L122-6-1 of the French Intellectual Property Code or specifically under the specific agreement with Cosmo Tech; - you must not remove this notice or any mention related to the copyright of Cosmo Tech;</p> <p>This Cosmo Tech software is provided 'as is', without any express or implied warranty towards the users.</p> <p>Any software generated through the use of this Cosmo Tech software shall be your own property to the extent this software does not contain any part of Cosmo Tech software source code.</p>"},{"location":"Validator/","title":"Semantic Validator","text":"<p>Simple semantic validator,</p> <p>Paste your orchestration file in <code>text</code> mode and it will be semantically validated</p> <p>Page made with https://github.com/josdejong/svelte-jsoneditor</p>"},{"location":"dependencies/","title":"List of dependencies","text":"<p>Orchestrator Dependencies </p> <p>Logging dependencies </p> <p>Command dependencies   Documentation generation requirements </p>"},{"location":"command_templates/csm-orc/csm-orc_run-step/","title":"csm-orc run-step","text":"<p>Description</p> <p>Runs a RunTemplate Step with most of the environment variables given by the Cosmo Tech API. May require a functional environment allowing access to a Cosmo Tech API</p> <p>Command</p> <p><code>csm-orc --log-level $LOG_LEVEL run-step --template $CSM_RUN_TEMPLATE_ID --steps $CSM_CONTAINER_MODE</code></p> Defined Environment Variable Name Description CSM_ORGANIZATION_ID   The id of an organization in the Cosmo Tech API CSM_WORKSPACE_ID   The id of a workspace in the Cosmo Tech API CSM_RUN_TEMPLATE_ID The name of the run template defined in the Cosmo Tech API and available in the project CSM_CONTAINER_MODE The steps run during a run-step CSM_API_URL   The url to a Cosmo Tech API CSM_API_SCOPE   The identification scope of a Cosmo Tech API AZURE_TENANT_ID   An Azure Tenant ID AZURE_CLIENT_ID   An Azure Client ID having access to the Cosmo Tech API AZURE_CLIENT_SECRET   The secret for the Azure Client LOG_LEVEL Either CRITICAL, ERROR, WARNING, INFO or DEBUG PYTHONPATH A list of folder to add to the python path CSM_DATASET_ABSOLUTE_PATH A local folder to store the main dataset content CSM_PARAMETERS_ABSOLUTE_PATH A local folder to store the parameters content CSM_SIMULATION_ID The id of the simulation run CSM_SIMULATION The name of the Simulation file to use AZURE_DATA_EXPLORER_RESOURCE_URI   the ADX cluster path (URI info can be found into ADX cluster page) AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI   The ADX cluster ingest path (URI info can be found into ADX cluster page) AZURE_DATA_EXPLORER_DATABASE_NAME   The targeted database name CSM_PROBES_MEASURES_TOPIC   An AMQP URI to send probe data to CSM_CONTROL_PLANE_TOPIC   An AMQP URI to send simulation control values to <p>Will be passed all system <code>Environment Variables</code> as well as the defined <code>Environment</code></p> csm-orc run-step json file <pre><code>{\n  \"id\":\"csm-orc run-step\",\n  \"command\":\"csm-orc\",\n  \"arguments\":[\n    \"--log-level\",\n    \"$LOG_LEVEL\",\n    \"run-step\",\n    \"--template\",\n    \"$CSM_RUN_TEMPLATE_ID\",\n    \"--steps\",\n    \"$CSM_CONTAINER_MODE\"\n  ],\n  \"environment\":{\n    \"CSM_ORGANIZATION_ID\":{\n      \"description\":\"The id of an organization in the Cosmo Tech API\",\n      \"optional\":true\n    },\n    \"CSM_WORKSPACE_ID\":{\n      \"description\":\"The id of a workspace in the Cosmo Tech API\",\n      \"optional\":true\n    },\n    \"CSM_RUN_TEMPLATE_ID\":{\n      \"description\":\"The name of the run template defined in the Cosmo Tech API and available in the project\"\n    },\n    \"CSM_CONTAINER_MODE\":{\n      \"description\":\"The steps run during a run-step\"\n    },\n    \"CSM_API_URL\":{\n      \"description\":\"The url to a Cosmo Tech API\",\n      \"optional\":true\n    },\n    \"CSM_API_SCOPE\":{\n      \"description\":\"The identification scope of a Cosmo Tech API\",\n      \"optional\":true\n    },\n    \"AZURE_TENANT_ID\":{\n      \"description\":\"An Azure Tenant ID\",\n      \"optional\":true\n    },\n    \"AZURE_CLIENT_ID\":{\n      \"description\":\"An Azure Client ID having access to the Cosmo Tech API\",\n      \"optional\":true\n    },\n    \"AZURE_CLIENT_SECRET\":{\n      \"description\":\"The secret for the Azure Client\",\n      \"optional\":true\n    },\n    \"LOG_LEVEL\":{\n      \"defaultValue\":\"INFO\",\n      \"description\":\"Either CRITICAL, ERROR, WARNING, INFO or DEBUG\"\n    },\n    \"PYTHONPATH\":{\n      \"description\":\"A list of folder to add to the python path\"\n    },\n    \"CSM_DATASET_ABSOLUTE_PATH\":{\n      \"description\":\"A local folder to store the main dataset content\"\n    },\n    \"CSM_PARAMETERS_ABSOLUTE_PATH\":{\n      \"description\":\"A local folder to store the parameters content\"\n    },\n    \"CSM_SIMULATION_ID\":{\n      \"description\":\"The id of the simulation run\"\n    },\n    \"CSM_SIMULATION\":{\n      \"description\":\"The name of the Simulation file to use\"\n    },\n    \"AZURE_DATA_EXPLORER_RESOURCE_URI\":{\n      \"description\":\"the ADX cluster path (URI info can be found into ADX cluster page)\",\n      \"optional\":true\n    },\n    \"AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI\":{\n      \"description\":\"The ADX cluster ingest path (URI info can be found into ADX cluster page)\",\n      \"optional\":true\n    },\n    \"AZURE_DATA_EXPLORER_DATABASE_NAME\":{\n      \"description\":\"The targeted database name\",\n      \"optional\":true\n    },\n    \"CSM_PROBES_MEASURES_TOPIC\":{\n      \"description\":\"An AMQP URI to send probe data to\",\n      \"optional\":true\n    },\n    \"CSM_CONTROL_PLANE_TOPIC\":{\n      \"description\":\"An AMQP URI to send simulation control values to\",\n      \"optional\":true\n    }\n  },\n  \"description\":\"Runs a RunTemplate Step with most of the environment variables given by the Cosmo Tech API. May require a functional environment allowing access to a Cosmo Tech API\",\n  \"useSystemEnvironment\":true\n}\n</code></pre>"},{"location":"commands/download_cloud_steps/","title":"Download Steps from cloud","text":"<p>Breaking change</p> <p>This command is no longer functional since 1.3.0 Equivalent commands have been added to <code>csm-data</code> a part of <code>CosmoTech-Acceleration-Library</code>. Trying to run this command will give you the equivalent command to use with <code>csm-data</code>. Install csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre> This command will be fully removed in a future version.</p> <p>Command help</p> <pre><code>&gt; csm-orc fetch-cloud-steps --help\n\n Usage: csm-orc fetch-cloud-steps [OPTIONS]                                                                           \n\n (Deprecated)                                                                                                         \n Uses environment variables to download cloud based Template steps Requires a valid Azure connection either with:     \n\n  \u2022 The AZ cli command: az login                                                                                      \n  \u2022 A triplet of env var AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET                                        \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --organization-id    o-##########         The id of an organization in the cosmotech api                           \u2502\n\u2502                                           ENV: CSM_ORGANIZATION_ID                                                 \u2502\n\u2502 --workspace-id       w-##########         The id of a solution in the cosmotech api                                \u2502\n\u2502                                           ENV: CSM_WORKSPACE_ID                                                    \u2502\n\u2502 --run-template-id    NAME                 The name of the run template in the cosmotech api                        \u2502\n\u2502                                           ENV: CSM_RUN_TEMPLATE_ID                                                 \u2502\n\u2502 --handler-list       HANDLER,...,HANDLER  A list of handlers to download (comma separated)                         \u2502\n\u2502                                           ENV: CSM_CONTAINER_MODE                                                  \u2502\n\u2502 --api-url            URL                  The url to a Cosmotech API                                               \u2502\n\u2502                                           ENV: CSM_API_URL                                                         \u2502\n\u2502 --api-scope          URI                  The identification scope of a Cosmotech API                              \u2502\n\u2502                                           ENV: CSM_API_SCOPE                                                       \u2502\n\u2502 --web-help                                Open the web documentation                                               \u2502\n\u2502 --help                                    Show this message and exit.                                              \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/legacy_json_generator/","title":"Generate legacy run template json file","text":"<p>Breaking change</p> <p>This command is no longer functional since 1.3.0 Equivalent commands have been added to <code>csm-data</code> a part of <code>CosmoTech-Acceleration-Library</code>. Trying to run this command will give you the equivalent command to use with <code>csm-data</code>. Install csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre> This command will be fully removed in a future version.</p> <p>Help command</p> <pre><code>&gt; csm-orc gen-from-legacy --help\n\n Usage: csm-orc gen-from-legacy [OPTIONS] COMMAND [ARGS]...                                                           \n\n (Deprecated)                                                                                                         \n Base command for the json generator using legacy files                                                               \n Check the help of the sub commands for more information:                                                             \n\n  \u2022 cloud requires access to a fully deployed solution                                                                \n  \u2022 solution requires a Solution.yaml file                                                                            \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --web-help      Open the web documentation                                                                         \u2502\n\u2502 --help          Show this message and exit.                                                                        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 cloud     Connect to the cosmotech API to download a run template and generate an orchestrator file at OUTPUT      \u2502\n\u2502 solution  Read SOLUTION_FILE to get a RUN_TEMPLATE_ID and generate an orchestrator file at OUTPUT                  \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre> Generate json from Solution.yaml<pre><code>&gt; csm-orc gen-from-legacy solution --help\n\n Usage: csm-orc gen-from-legacy solution [OPTIONS] SOLUTION_FILE OUTPUT RUN_TEMPLATE_ID                               \n\n (Deprecated)                                                                                                         \n Read SOLUTION_FILE to get a RUN_TEMPLATE_ID and generate an orchestrator file at OUTPUT                              \n\n\u256d\u2500 Arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  SOLUTION_FILE      FILE  [required]                                                                             \u2502\n\u2502 *  OUTPUT             FILE  [required]                                                                             \u2502\n\u2502 *  RUN-TEMPLATE-ID    TEXT  [required]                                                                             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --describe/--no-describe      Show a description of the generated template after generation                        \u2502\n\u2502                               DEFAULT: no-describe                                                                 \u2502\n\u2502 --web-help                    Open the web documentation                                                           \u2502\n\u2502 --help                        Show this message and exit.                                                          \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre> Generate json from Cosmo Tech API<pre><code>&gt; csm-orc gen-from-legacy cloud --help\n\n Usage: csm-orc gen-from-legacy cloud [OPTIONS] OUTPUT                                                                \n\n (Deprecated)                                                                                                         \n Connect to the cosmotech API to download a run template and generate an orchestrator file at OUTPUT                  \n\n\u256d\u2500 Arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  OUTPUT    FILE  [required]                                                                                      \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --api-url                   URL           The url to a Cosmotech API                                            \u2502\n\u2502                                              ENV: CSM_API_URL                                                      \u2502\n\u2502                                              [required]                                                            \u2502\n\u2502 *  --api-scope                 URI           The identification scope of a Cosmotech API                           \u2502\n\u2502                                              ENV: CSM_API_SCOPE                                                    \u2502\n\u2502                                              [required]                                                            \u2502\n\u2502 *  --organization-id           o-##########  The id of an organization in the cosmotech api                        \u2502\n\u2502                                              ENV: CSM_ORGANIZATION_ID                                              \u2502\n\u2502                                              [required]                                                            \u2502\n\u2502 *  --workspace-id              w-##########  The id of a solution in the cosmotech api                             \u2502\n\u2502                                              ENV: CSM_WORKSPACE_ID                                                 \u2502\n\u2502                                              [required]                                                            \u2502\n\u2502 *  --run-template-id           NAME          The name of the run template in the cosmotech api                     \u2502\n\u2502                                              ENV: CSM_RUN_TEMPLATE_ID                                              \u2502\n\u2502                                              [required]                                                            \u2502\n\u2502    --describe/--no-describe                  Show a description of the generated template after generation         \u2502\n\u2502                                              DEFAULT: no-describe                                                  \u2502\n\u2502    --web-help                                Open the web documentation                                            \u2502\n\u2502    --help                                    Show this message and exit.                                           \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/list_templates/","title":"List available command templates","text":"<p>Command help</p> <pre><code>&gt; csm-orc list-templates --help\n\n Usage: csm-orc list-templates [OPTIONS]                                                                              \n\n Show a list of pre-available command templates                                                                       \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --template-id  -t  TEXT  A template id to check for, can be used multiple times                                    \u2502\n\u2502 --file         -f  FILE  An orchestration file to add to the library                                               \u2502\n\u2502 --verbose      -v        Display full information on the resulting templates                                       \u2502\n\u2502 --web-help               Open the web documentation                                                                \u2502\n\u2502 --help                   Show this message and exit.                                                               \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/orchestrator/","title":"Orchestrator","text":"<p>Help command</p> <pre><code>&gt; csm-orc run --help\n\n Usage: csm-orc run [OPTIONS] TEMPLATE                                                                                \n\n Runs the given TEMPLATE file                                                                                         \n Commands are run as subprocess using bash -c \"&lt;command&gt; &lt;arguments&gt;\".                                                \n In case you are in a python venv, the venv is activated before any command is run.                                   \n\n\u256d\u2500 Arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  TEMPLATE    FILE  [required]                                                                                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --dry-run/--no-dry-run              -n           Use dry-run mode                                                  \u2502\n\u2502                                                  ENV: DRY_RUN                                                      \u2502\n\u2502                                                  DEFAULT: no-dry-run                                               \u2502\n\u2502 --display-env/--no-display-env                   List all required environment variables and their documentation   \u2502\n\u2502                                                  ENV: DISPLAY_ENVIRONMENT                                          \u2502\n\u2502                                                  DEFAULT: no-display-env                                           \u2502\n\u2502 --gen-env-target                        PATH     Generate a .env file with all env vars to be filed when           \u2502\n\u2502                                                  display-env is called                                             \u2502\n\u2502                                                  ENV: GENERATE_ENVIRONMENT                                         \u2502\n\u2502 --skip-step                             STEP_ID  Define a list of steps to be skipped during this run              \u2502\n\u2502                                                  ENV: CSM_SKIP_STEPS                                               \u2502\n\u2502 --validate-only/--no-validate-only               Run only a sematic validation of the orchestrator file            \u2502\n\u2502                                                  ENV: CSM_ORCHESTRATOR_VALIDATE_ONLY                               \u2502\n\u2502 --web-help                                       Open the web documentation                                        \u2502\n\u2502 --help                                           Show this message and exit.                                       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre> <p>Potential Issues</p> <p>A known issue exists with graphical commands.</p>"},{"location":"commands/orchestrator/#examples","title":"Examples","text":"JSON Schema <pre><code>{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://cosmotech.com/run_template.schema.json\",\n  \"title\": \"Run Template\",\n  \"description\": \"A run template description\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"commandTemplates\": {\n      \"description\": \"A list of Commands Templates\",\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": \"A Command Template describe a single executable with default properties\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The Id of the Command Template\",\n            \"pattern\": \"^\\\\S*$\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the command template\"\n          },\n          \"command\": {\n            \"type\": \"string\",\n            \"description\": \"The root bash command necessary to execute the template\"\n          },\n          \"arguments\": {\n            \"type\": \"array\",\n            \"description\": \"The list of default arguments passed to the command\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"useSystemEnvironment\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should the system environment be fully passed to the command ?\"\n          },\n          \"environment\": {\n            \"type\": \"object\",\n            \"description\": \"The default list of Environment Variables required for the command\",\n            \"patternProperties\": {\n              \".+\": {\n                \"$ref\": \"#/$defs/environmentVariable\"\n              }\n            },\n            \"minProperties\": 1\n          }\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"command\"\n        ]\n      }\n    },\n    \"steps\": {\n      \"description\": \"A list of Steps descriptors\",\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": \"A Step is a single instance of a Command that is scheduled to be run, can use an existing command or define its own\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The Id of the Step\",\n            \"pattern\": \"^\\\\S*$\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the step (override command template description)\"\n          },\n          \"commandId\": {\n            \"type\": \"string\",\n            \"description\": \"An Id for an existing command\"\n          },\n          \"command\": {\n            \"type\": \"string\",\n            \"description\": \"The root bash command necessary to execute the command\"\n          },\n          \"arguments\": {\n            \"type\": \"array\",\n            \"description\": \"The list of arguments passed to the command (replace the default one)\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"useSystemEnvironment\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should the system environment be fully passed to the command ?\"\n          },\n          \"environment\": {\n            \"type\": \"object\",\n            \"description\": \"The list of Environment Variables defined for the command (replace the default one)\",\n            \"patternProperties\": {\n              \".+\": {\n                \"$ref\": \"#/$defs/environmentVariable\"\n              }\n            },\n            \"minProperties\": 1\n          },\n          \"precedents\": {\n            \"type\": \"array\",\n            \"description\": \"A list of steps that have to be run before this one\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false,\n        \"oneOf\": [\n          {\n            \"required\": [\n              \"id\",\n              \"command\"\n            ]\n          },\n          {\n            \"required\": [\n              \"id\",\n              \"commandId\"\n            ]\n          }\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"steps\"\n  ],\n  \"$defs\": {\n    \"environmentVariable\": {\n      \"type\": \"object\",\n      \"description\": \"A environment variable descriptor\",\n      \"properties\": {\n        \"defaultValue\": {\n          \"type\": \"string\",\n          \"description\": \"The default value of the required variable, if not set, the variable has to be set in the system\"\n        },\n        \"value\": {\n          \"type\": \"string\",\n          \"description\": \"The effective value of the required variable, will override any system value\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A description of the required Environment Variable for documentation reasons\"\n        },\n        \"optional\": {\n          \"type\": \"boolean\",\n          \"description\": \"Should the Environment Variable be required for the run of a step ?\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  }\n}\n</code></pre> Example json file simple_example.json<pre><code>{\n  \"commandTemplates\": [\n    {\n      \"id\": \"TEMPLATE_ID\",\n      \"command\": \"echo\",\n      \"arguments\": [\n        \"list\",\n        \"of\",\n        \"arguments\",\n        \"$ENV_VALUE\"\n      ],\n      \"environment\": {\n        \"ENV_VALUE\": {\n          \"defaultValue\": \"DEFAULT\",\n          \"description\": \"An environment variable with a default value\"\n        }\n      }\n    }\n  ],\n  \"steps\": [\n    {\n      \"id\": \"UseTemplate\",\n      \"commandId\": \"TEMPLATE_ID\"\n    },\n    {\n      \"id\": \"OverrideTemplate\",\n      \"commandId\": \"TEMPLATE_ID\",\n      \"arguments\": [\n        \"Added\",\n        \"arguments\"\n      ],\n      \"environment\": {\n        \"ENV_VALUE\": {\n          \"value\": \"OVERRIDE\",\n          \"description\": \"An environment variable with a forced value\"\n        }\n      },\n      \"precedents\": [\n        \"UseTemplate\"\n      ]\n    },\n    {\n      \"id\": \"NewCommand\",\n      \"command\": \"echo\",\n      \"arguments\": [\n        \"$NO_EXIST\"\n      ],\n      \"environment\": {\n        \"NO_EXIST\": {\n          \"description\": \"An environment variable with no value\"\n        }\n      },\n      \"precedents\": [\n        \"OverrideTemplate\"\n      ]\n    }\n  ]\n}\n</code></pre> Run command with json file <p>The following code won't run by itself because <code>example.json</code> requires the EnvVar <code>NO_EXIST</code> to be set by the system run without complementary EnvVar<pre><code>csm-orc run example.json\n</code></pre> You could do the following to have it work set EnvVar with export<pre><code>export NO_EXIST=\"This value exists\"\ncsm-orc run example.json\n</code></pre> The following works too run with EnvVar for run only<pre><code>NO_EXIST=\"This value exists\" csm-orc run example.json\n</code></pre></p>"},{"location":"commands/parameters_generator/","title":"Initialize Parameters Folder","text":"<p>Breaking change</p> <p>This command is no longer functional since 1.3.0 Equivalent commands have been added to <code>csm-data</code> a part of <code>CosmoTech-Acceleration-Library</code>. Trying to run this command will give you the equivalent command to use with <code>csm-data</code>. Install csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre> This command will be fully removed in a future version.</p> <p>Help command</p> <pre><code>&gt; csm-orc init-parameters --help\n\n Usage: csm-orc init-parameters [OPTIONS] COMMAND [ARGS]...                                                           \n\n (Deprecated)                                                                                                         \n Base command to initialize parameter folders                                                                         \n Will create:                                                                                                         \n\n  \u2022 A parameters.json/parameters.csv in the folder with all parameters                                                \n  \u2022 A folder per %DATASETID% datasets with the name of the parameter                                                  \n    Check the help of the sub commands for more information:                                                          \n  \u2022 cloud requires access to a fully deployed solution                                                                \n  \u2022 solution requires a Solution.yaml file                                                                            \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --web-help      Open the web documentation                                                                         \u2502\n\u2502 --help          Show this message and exit.                                                                        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 cloud     Initialize parameter folder for given run template from CosmoTech cloud API                              \u2502\n\u2502 solution  Initialize parameter folder for given run template from a Solution yaml file                             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre> Initialize using Solution.yaml<pre><code>&gt; csm-orc init-parameters solution --help\n\n Usage: csm-orc init-parameters solution [OPTIONS] SOLUTION_FILE OUTPUT_FOLDER RUN_TEMPLATE_ID                        \n\n (Deprecated)                                                                                                         \n Initialize parameter folder for given run template from a Solution yaml file                                         \n\n\u256d\u2500 Arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  SOLUTION_FILE      FILE  [required]                                                                             \u2502\n\u2502 *  OUTPUT_FOLDER      PATH  [required]                                                                             \u2502\n\u2502 *  RUN_TEMPLATE_ID    TEXT  [required]                                                                             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --write-json/--no-write-json      Toggle writing of parameters in json format                                      \u2502\n\u2502                                   ENV: WRITE_JSON                                                                  \u2502\n\u2502                                   DEFAULT: no-write-json                                                           \u2502\n\u2502 --write-csv/--no-write-csv        Toggle writing of parameters in csv format                                       \u2502\n\u2502                                   ENV: WRITE_CSV                                                                   \u2502\n\u2502                                   DEFAULT: write-csv                                                               \u2502\n\u2502 --web-help                        Open the web documentation                                                       \u2502\n\u2502 --help                            Show this message and exit.                                                      \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre> Initialize using Cosmo Tech API<pre><code>&gt; csm-orc init-parameters cloud --help\n\n Usage: csm-orc init-parameters cloud [OPTIONS] OUTPUT_FOLDER                                                         \n\n (Deprecated)                                                                                                         \n Initialize parameter folder for given run template from CosmoTech cloud API                                          \n\n\u256d\u2500 Arguments \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  OUTPUT_FOLDER    PATH  [required]                                                                               \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --api-url                       URL           The url to a Cosmotech API                                        \u2502\n\u2502                                                  ENV: CSM_API_URL                                                  \u2502\n\u2502                                                  [required]                                                        \u2502\n\u2502 *  --api-scope                     URI           The identification scope of a Cosmotech API                       \u2502\n\u2502                                                  ENV: CSM_API_SCOPE                                                \u2502\n\u2502                                                  [required]                                                        \u2502\n\u2502 *  --organization-id               o-##########  The id of an organization in the cosmotech api                    \u2502\n\u2502                                                  ENV: CSM_ORGANIZATION_ID                                          \u2502\n\u2502                                                  [required]                                                        \u2502\n\u2502 *  --workspace-id                  w-##########  The id of a solution in the cosmotech api                         \u2502\n\u2502                                                  ENV: CSM_WORKSPACE_ID                                             \u2502\n\u2502                                                  [required]                                                        \u2502\n\u2502 *  --run-template-id               NAME          The name of the run template in the cosmotech api                 \u2502\n\u2502                                                  ENV: CSM_RUN_TEMPLATE_ID                                          \u2502\n\u2502                                                  [required]                                                        \u2502\n\u2502    --write-json/--no-write-json                  Toggle writing of parameters in json format                       \u2502\n\u2502                                                  ENV: WRITE_JSON                                                   \u2502\n\u2502                                                  DEFAULT: no-write-json                                            \u2502\n\u2502    --write-csv/--no-write-csv                    Toggle writing of parameters in csv format                        \u2502\n\u2502                                                  ENV: WRITE_CSV                                                    \u2502\n\u2502                                                  DEFAULT: write-csv                                                \u2502\n\u2502    --web-help                                    Open the web documentation                                        \u2502\n\u2502    --help                                        Show this message and exit.                                       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/run_data_downloader/","title":"Run Data Download","text":"<p>Breaking change</p> <p>This command is no longer functional since 1.3.0 Equivalent commands have been added to <code>csm-data</code> a part of <code>CosmoTech-Acceleration-Library</code>. Trying to run this command will give you the equivalent command to use with <code>csm-data</code>. Install csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre> This command will be fully removed in a future version.</p> <p>Help command</p> <pre><code>&gt; csm-orc fetch-run-data --help\n\n Usage: csm-orc fetch-run-data [OPTIONS]                                                                              \n\n (Deprecated)                                                                                                         \n Download a runner data from the Cosmo Tech API Requires a valid Azure connection either with:                        \n\n  \u2022 The AZ cli command: az login                                                                                      \n  \u2022 A triplet of env var AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET                                        \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --organization-id             o-##########  The id of an organization in the cosmotech api                         \u2502\n\u2502                                             ENV: CSM_ORGANIZATION_ID                                               \u2502\n\u2502 --workspace-id                w-##########  The id of a workspace in the cosmotech api                             \u2502\n\u2502                                             ENV: CSM_WORKSPACE_ID                                                  \u2502\n\u2502 --runner-id                   s-##########  The id of a runner in the cosmotech api                                \u2502\n\u2502                                             ENV: CSM_RUNNER_ID                                                     \u2502\n\u2502 --parameters-absolute-path    PATH          A local folder to store the parameters content                         \u2502\n\u2502                                             ENV: CSM_PARAMETERS_ABSOLUTE_PATH                                      \u2502\n\u2502 --web-help                                  Open the web documentation                                             \u2502\n\u2502 --help                                      Show this message and exit.                                            \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/run_step/","title":"Run Template Step","text":"<p>Help command</p> <pre><code>&gt; csm-orc run-step --help\n\n Usage: csm-orc run-step [OPTIONS]                                                                                    \n\n Runs a list of steps of a run template in a CosmoTech project Known limitations:                                     \n\n  \u2022 The step MUST contain an executable main.py file                                                                  \n  \u2022 The engine step requires to set the env var CSM_SIMULATION if you have a run without a python engine              \n  \u2022 Qt consumers in the simulator breaks the engine step when orchestrating                                           \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --template    TEXT  refer to a folder contained in code/run_templates                                           \u2502\n\u2502                        ENV: CSM_RUN_TEMPLATE_ID                                                                    \u2502\n\u2502                        [required]                                                                                  \u2502\n\u2502    --steps       TEXT  A list of Steps definer in the TEMPLATE folder that will be executed (comma-separated).     \u2502\n\u2502                        Defaults to CSMDOCKER equivalent to parameters_handler,validator,prerun,engine,postrun (the \u2502\n\u2502                        legacy order)                                                                               \u2502\n\u2502                        ENV: CSM_CONTAINER_MODE                                                                     \u2502\n\u2502                        DEFAULT: CSMDOCKER                                                                          \u2502\n\u2502    --web-help          Open the web documentation                                                                  \u2502\n\u2502    --help              Show this message and exit.                                                                 \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/scenario_data_downloader/","title":"Scenario Data Download","text":"<p>Breaking change</p> <p>This command is no longer functional since 1.3.0 Equivalent commands have been added to <code>csm-data</code> a part of <code>CosmoTech-Acceleration-Library</code>. Trying to run this command will give you the equivalent command to use with <code>csm-data</code>. Install csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre> This command will be fully removed in a future version.</p> <p>Help command</p> <pre><code>&gt; csm-orc fetch-scenariorun-data --help\n\n Usage: csm-orc fetch-scenariorun-data [OPTIONS]                                                                      \n\n (Deprecated)                                                                                                         \n Uses environment variables to call the download_scenario_data function Requires a valid Azure connection either      \n with:                                                                                                                \n\n  \u2022 The AZ cli command: az login                                                                                      \n  \u2022 A triplet of env var AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET                                        \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --organization-id                     o-##########  The id of an organization in the cosmotech api                 \u2502\n\u2502                                                     ENV: CSM_ORGANIZATION_ID                                       \u2502\n\u2502 --workspace-id                        w-##########  The id of a workspace in the cosmotech api                     \u2502\n\u2502                                                     ENV: CSM_WORKSPACE_ID                                          \u2502\n\u2502 --scenario-id                         s-##########  The id of a scenario in the cosmotech api                      \u2502\n\u2502                                                     ENV: CSM_SCENARIO_ID                                           \u2502\n\u2502 --dataset-absolute-path               PATH          A local folder to store the main dataset content               \u2502\n\u2502                                                     ENV: CSM_DATASET_ABSOLUTE_PATH                                 \u2502\n\u2502 --parameters-absolute-path            PATH          A local folder to store the parameters content                 \u2502\n\u2502                                                     ENV: CSM_PARAMETERS_ABSOLUTE_PATH                              \u2502\n\u2502 --write-json/--no-write-json                        Toggle writing of parameters in json format                    \u2502\n\u2502                                                     ENV: WRITE_JSON                                                \u2502\n\u2502                                                     DEFAULT: no-write-json                                         \u2502\n\u2502 --write-csv/--no-write-csv                          Toggle writing of parameters in csv format                     \u2502\n\u2502                                                     ENV: WRITE_CSV                                                 \u2502\n\u2502                                                     DEFAULT: write-csv                                             \u2502\n\u2502 --fetch-dataset/--no-fetch-dataset                  Toggle fetching datasets                                       \u2502\n\u2502                                                     ENV: FETCH_DATASET                                             \u2502\n\u2502                                                     DEFAULT: fetch-dataset                                         \u2502\n\u2502 --parallel/--no-parallel                            Toggle parallelization while fetching datasets,                \u2502\n\u2502                                                     ENV: FETCH_DATASETS_IN_PARALLEL                                \u2502\n\u2502                                                     DEFAULT: parallel                                              \u2502\n\u2502 --web-help                                          Open the web documentation                                     \u2502\n\u2502 --help                                              Show this message and exit.                                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/simulation_to_adx/","title":"Simulation to ADX connector","text":"<p>Breaking change</p> <p>This command is no longer functional since 1.3.0 Equivalent commands have been added to <code>csm-data</code> a part of <code>CosmoTech-Acceleration-Library</code>. Trying to run this command will give you the equivalent command to use with <code>csm-data</code>. Install csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre> This command will be fully removed in a future version.</p> <p>Help command</p> <pre><code>&gt; csm-orc send-to-adx --help\n\n Usage: csm-orc send-to-adx [OPTIONS]                                                                                 \n\n (Deprecated)                                                                                                         \n Uses environment variables to send content of CSV files to ADX Requires a valid Azure connection either with:        \n\n  \u2022 The AZ cli command: az login                                                                                      \n  \u2022 A triplet of env var AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET                                        \n\n\u256d\u2500 OPTIONS \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --dataset-absolute-path                   PATH  A local folder to store the main dataset content                   \u2502\n\u2502                                                 ENV: CSM_DATASET_ABSOLUTE_PATH                                     \u2502\n\u2502 --parameters-absolute-path                PATH  A local folder to store the parameters content                     \u2502\n\u2502                                                 ENV: CSM_PARAMETERS_ABSOLUTE_PATH                                  \u2502\n\u2502 --simulation-id                           UUID  the Simulation Id to add to records                                \u2502\n\u2502                                                 ENV: CSM_SIMULATION_ID                                             \u2502\n\u2502 --adx-uri                                 URI   the ADX cluster path (URI info can be found into ADX cluster page) \u2502\n\u2502                                                 ENV: AZURE_DATA_EXPLORER_RESOURCE_URI                              \u2502\n\u2502 --adx-ingest-uri                          URI   The ADX cluster ingest path (URI info can be found into ADX        \u2502\n\u2502                                                 cluster page)                                                      \u2502\n\u2502                                                 ENV: AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI                       \u2502\n\u2502 --database-name                           NAME  The targeted database name                                         \u2502\n\u2502                                                 ENV: AZURE_DATA_EXPLORER_DATABASE_NAME                             \u2502\n\u2502 --send-parameters/--no-send-parameters          whether or not to send parameters (parameters path is mandatory    \u2502\n\u2502                                                 then)                                                              \u2502\n\u2502                                                 ENV: CSM_SEND_DATAWAREHOUSE_PARAMETERS                             \u2502\n\u2502                                                 DEFAULT: no-send-parameters                                        \u2502\n\u2502 --send-datasets/--no-send-datasets              whether or not to send datasets (parameters path is mandatory      \u2502\n\u2502                                                 then)                                                              \u2502\n\u2502                                                 ENV: CSM_SEND_DATAWAREHOUSE_DATASETS                               \u2502\n\u2502                                                 DEFAULT: no-send-datasets                                          \u2502\n\u2502 --wait/--no-wait                                Toggle waiting for the ingestion results                           \u2502\n\u2502                                                 ENV: WAIT_FOR_INGESTION                                            \u2502\n\u2502                                                 DEFAULT: no-wait                                                   \u2502\n\u2502 --web-help                                      Open the web documentation                                         \u2502\n\u2502 --help                                          Show this message and exit.                                        \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"examples/","title":"Example","text":"<p>A list of examples for the main usages you could have with <code>csm-orc run</code>.</p> <p> Simple Simulation Run</p> <p>A simple run of a Cosmo Tech Simulator with no special configuration except for the input Simulation.</p> <p> Simple Simulation Run</p> <p> Simple Python Script</p> <p>A simple run of a python script</p> <p> Simple Python Script</p> <p> Cosmo Tech Legacy Run Template</p> <p>The equivalent to a legacy run template with all steps active.</p> <p> Cosmo Tech Legacy Run Template</p> <p> Run git-stored orchestrator</p> <p>Download and run an orchestrator file stored inside a distant git repository</p> <p> Git Stored Run</p> <p> Minimal docker project</p> <p>Generate a minimal <code>docker</code> image that can be sent to be run in a Cosmo Tech API</p> <p> Minimal docker project</p>"},{"location":"examples/git_run/","title":"Run git-stored orchestrator","text":""},{"location":"examples/git_run/#description","title":"Description","text":"<p>This example will download a git repository which is stored in the environment variable <code>REPOSITORY_URL</code>  and will run an orchestrator file <code>ORC_SCRIPT_PATH</code> from it</p>"},{"location":"examples/git_run/#template","title":"Template","text":"run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"git-clone\",\n      \"command\": \"git\",\n      \"arguments\": [\n        \"clone\",\n        \"$REPOSITORY_URL\",\n        \"cloned-repository\"\n      ],\n      \"useSystemEnvironment\": true,\n      \"environment\": {\n        \"REPOSITORY_URL\": {\n          \"description\": \"The URL of a repository to clone\"\n        }\n      }\n    },\n    {\n      \"id\": \"run-subscript\",\n      \"command\": \"csm-orc\",\n      \"useSystemEnvironment\": true,\n      \"arguments\": [\n        \"run\",\n        \"cloned-repository/$ORC_SCRIPT_PATH\"\n      ],\n      \"environment\": {\n        \"ORC_SCRIPT_PATH\": {\n          \"description\": \"Path to an orchestrator script inside the cloned repository\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"examples/legacy_run/","title":"Cosmo Tech Legacy Run Template","text":""},{"location":"examples/legacy_run/#description","title":"Description","text":"<p>This example represents a full legacy run template requiring a lot of environment variables and making use of <code>csm-orc</code> commands.</p> <p>Most environment variables are defined in the \"Brewery+Docker\" tutorial.</p>"},{"location":"examples/legacy_run/#template","title":"Template","text":"run.json<pre><code>{\n  \"commandTemplates\": [\n    {\n      \"id\": \"csm_orc_run_step\",\n      \"command\": \"csm-orc\",\n      \"arguments\": [\n        \"run-step\"\n      ],\n      \"environment\": {\n        \"CSM_ORGANIZATION_ID\": {\n          \"optional\": true,\n          \"description\": \"The id of an organization in the cosmotech api\"\n        },\n        \"CSM_WORKSPACE_ID\": {\n          \"optional\": true,\n          \"description\": \"The id of a workspace in the cosmotech api\"\n        },\n        \"CSM_RUN_TEMPLATE_ID\": {\n          \"description\": \"The name of the run template defined in the cosmotech api and available in the project\"\n        },\n        \"CSM_CONTAINER_MODE\": {\n          \"description\": \"The steps run during a run-step\"\n        },\n        \"CSM_API_URL\": {\n          \"optional\": true,\n          \"description\": \"The url to a Cosmotech API\"\n        },\n        \"CSM_API_SCOPE\": {\n          \"optional\": true,\n          \"description\": \"The identification scope of a Cosmotech API\"\n        },\n        \"AZURE_TENANT_ID\": {\n          \"optional\": true,\n          \"description\": \"An Azure Tenant ID\"\n        },\n        \"AZURE_CLIENT_ID\": {\n          \"optional\": true,\n          \"description\": \"An Azure Client ID having access to the Cosmotech API\"\n        },\n        \"AZURE_CLIENT_SECRET\": {\n          \"optional\": true,\n          \"description\": \"The secret for the Azure Client\"\n        },\n        \"LOG_LEVEL\": {\n          \"defaultValue\": \"INFO\",\n          \"description\": \"Either CRITICAL, ERROR, WARNING, INFO or DEBUG\"\n        },\n        \"PYTHONPATH\": {\n          \"description\": \"A list of folder to add to the python path\"\n        },\n        \"CSM_DATASET_ABSOLUTE_PATH\": {\n          \"description\": \"A local folder to store the main dataset content\"\n        },\n        \"CSM_PARAMETERS_ABSOLUTE_PATH\": {\n          \"description\": \"A local folder to store the parameters content\"\n        },\n        \"CSM_SIMULATION_ID\": {\n          \"description\": \"The id of the simulation run\"\n        },\n        \"CSM_SIMULATION\": {\n          \"defaultValue\": \"MySimulation\",\n          \"description\": \"The name of the Simulation file to use\"\n        },\n        \"AZURE_DATA_EXPLORER_RESOURCE_URI\": {\n          \"optional\": true,\n          \"description\": \"the ADX cluster path (URI info can be found into ADX cluster page)\"\n        },\n        \"AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI\": {\n          \"optional\": true,\n          \"description\": \"The ADX cluster ingest path (URI info can be found into ADX cluster page)\"\n        },\n        \"AZURE_DATA_EXPLORER_DATABASE_NAME\": {\n          \"optional\": true,\n          \"description\": \"The targeted database name\"\n        }\n      }\n    }\n  ],\n  \"steps\": [\n    {\n      \"id\": \"fetch_scenario_parameters\",\n      \"command\": \"csm-orc\",\n      \"arguments\": [\n        \"fetch-scenariorun-data\"\n      ],\n      \"environment\": {\n        \"CSM_ORGANIZATION_ID\": {\n          \"description\": \"The id of an organization in the cosmotech api\"\n        },\n        \"CSM_WORKSPACE_ID\": {\n          \"description\": \"The id of a workspace in the cosmotech api\"\n        },\n        \"CSM_SCENARIO_ID\": {\n          \"description\": \"The id of a scenario in the cosmotech api\"\n        },\n        \"CSM_API_URL\": {\n          \"description\": \"The url to a Cosmotech API\"\n        },\n        \"CSM_API_SCOPE\": {\n          \"description\": \"The identification scope of a Cosmotech API\"\n        },\n        \"CSM_DATASET_ABSOLUTE_PATH\": {\n          \"description\": \"A local folder to store the main dataset content\"\n        },\n        \"CSM_PARAMETERS_ABSOLUTE_PATH\": {\n          \"description\": \"A local folder to store the parameters content\"\n        },\n        \"WRITE_JSON\": {\n          \"defaultValue\": \"true\",\n          \"description\": \"Toggle writing of parameters in json format\"\n        },\n        \"WRITE_CSV\": {\n          \"defaultValue\": \"false\",\n          \"description\": \"Toggle writing of parameters in csv format\"\n        },\n        \"FETCH_DATASET\": {\n          \"defaultValue\": \"true\",\n          \"description\": \"Toggle fetching datasets\"\n        },\n        \"LOG_LEVEL\": {\n          \"defaultValue\": \"INFO\",\n          \"description\": \"Either CRITICAL, ERROR, WARNING, INFO or DEBUG\"\n        }\n      },\n      \"useSystemEnvironment\": true\n    },\n    {\n      \"id\": \"parameters_handler\",\n      \"commandId\": \"csm_orc_run_step\",\n      \"environment\": {\n        \"CSM_CONTAINER_MODE\": {\n          \"value\": \"parameters_handler\"\n        }\n      },\n      \"precedents\": [\n        \"fetch_scenario_parameters\"\n      ],\n      \"useSystemEnvironment\": true\n    },\n    {\n      \"id\": \"validator\",\n      \"commandId\": \"csm_orc_run_step\",\n      \"environment\": {\n        \"CSM_CONTAINER_MODE\": {\n          \"value\": \"validator\"\n        }\n      },\n      \"precedents\": [\n        \"parameters_handler\"\n      ],\n      \"useSystemEnvironment\": true\n    },\n    {\n      \"id\": \"send_to_adx\",\n      \"command\": \"csm-orc\",\n      \"arguments\": [\n        \"send-to-adx\"\n      ],\n      \"environment\": {\n        \"AZURE_TENANT_ID\": {\n          \"description\": \"An Azure Tenant ID\"\n        },\n        \"AZURE_CLIENT_ID\": {\n          \"description\": \"An Azure Client ID having access to the Cosmotech API\"\n        },\n        \"AZURE_CLIENT_SECRET\": {\n          \"description\": \"The secret for the Azure Client\"\n        },\n        \"LOG_LEVEL\": {\n          \"defaultValue\": \"INFO\",\n          \"description\": \"Either CRITICAL, ERROR, WARNING, INFO or DEBUG\"\n        },\n        \"CSM_DATASET_ABSOLUTE_PATH\": {\n          \"description\": \"A local folder to store the main dataset content\"\n        },\n        \"CSM_PARAMETERS_ABSOLUTE_PATH\": {\n          \"description\": \"A local folder to store the parameters content\"\n        },\n        \"CSM_SIMULATION_ID\": {\n          \"description\": \"The id of the simulation run\"\n        },\n        \"AZURE_DATA_EXPLORER_RESOURCE_URI\": {\n          \"description\": \"the ADX cluster path (URI info can be found into ADX cluster page)\"\n        },\n        \"AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI\": {\n          \"description\": \"The ADX cluster ingest path (URI info can be found into ADX cluster page)\"\n        },\n        \"AZURE_DATA_EXPLORER_DATABASE_NAME\": {\n          \"description\": \"The targeted database name\"\n        },\n        \"CSM_SEND_DATAWAREHOUSE_PARAMETERS\": {\n          \"defaultValue\": \"true\",\n          \"description\": \"whether or not to send parameters (parameters path is mandatory then)\"\n        },\n        \"CSM_SEND_DATAWAREHOUSE_DATASETS\": {\n          \"defaultValue\": \"true\",\n          \"description\": \"whether or not to send datasets (parameters path is mandatory then)\"\n        },\n        \"WAIT_FOR_INGESTION\": {\n          \"defaultValue\": \"false\",\n          \"description\": \"Toggle waiting for the ingestion results\"\n        }\n      },\n      \"precedents\": [\n        \"validator\"\n      ],\n      \"useSystemEnvironment\": true\n    },\n    {\n      \"id\": \"prerun\",\n      \"commandId\": \"csm_orc_run_step\",\n      \"environment\": {\n        \"CSM_CONTAINER_MODE\": {\n          \"value\": \"prerun\"\n        }\n      },\n      \"precedents\": [\n        \"send_to_adx\"\n      ],\n      \"useSystemEnvironment\": true\n    },\n    {\n      \"id\": \"engine\",\n      \"commandId\": \"csm_orc_run_step\",\n      \"environment\": {\n        \"CSM_CONTAINER_MODE\": {\n          \"value\": \"engine\"\n        }\n      },\n      \"precedents\": [\n        \"prerun\"\n      ],\n      \"useSystemEnvironment\": true\n    },\n    {\n      \"id\": \"postrun\",\n      \"commandId\": \"csm_orc_run_step\",\n      \"environment\": {\n        \"CSM_CONTAINER_MODE\": {\n          \"value\": \"postrun\"\n        }\n      },\n      \"precedents\": [\n        \"engine\"\n      ],\n      \"useSystemEnvironment\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"examples/minimal_docker/","title":"Minimal docker project","text":""},{"location":"examples/minimal_docker/#description","title":"Description","text":"<p>This example will show you a minimal project that will allow you to build a <code>docker</code> image that will be able to run your orchestration files.</p>"},{"location":"examples/minimal_docker/#project-description","title":"Project description","text":"Project tree<pre><code>minimal_docker_project\n\u251c\u2500\u2500 code/\n\u2502   \u251c\u2500\u2500 main.py\n\u2502   \u2514\u2500\u2500 run_templates/\n\u2502       \u2514\u2500\u2500 RUN/\n\u2502           \u2514\u2500\u2500 run.json\n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 requirements.txt\n</code></pre>"},{"location":"examples/minimal_docker/#file-content","title":"File content","text":"code/main.py<pre><code># This is a sample Python script.\nif __name__ == '__main__':\n    print(\"HELLO WORLD\")\n</code></pre> <p>This python file will be run by using a simple orchestration file.</p> code/run_templates/RUN/run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"MAIN\",\n      \"command\": \"python\",\n      \"description\": \"Run a simple python script\",\n      \"arguments\": [\n        \"code/main.py\"\n      ]\n    }\n  ]\n}\n</code></pre> <p>Now we only need to add our requirements for the project:</p> requirements.txt<pre><code>cosmotech-run-orchestrator==1.1.0\n</code></pre> <p>And to finish a simple Dockerfile to build our docker image:</p> Dockerfile<pre><code>FROM python:latest\n\nCOPY requirements.txt .\n\nRUN python3 -m pip install -r requirements.txt\n\n# The code folder must be set in this position to work \n# with the predefined entrypoint of csm-orc\nCOPY code /pkg/share/code\n\n# Defining a run template ID here allows to have a default for the image\n# and thus avoid having to define the EnvVar at run\nENV CSM_RUN_TEMPLATE_ID=RUN\n\n# The following command is the entrypoint defined by csm-orc that will do \n# a default run of your template.\n# This command is hidden in the list of commands, \n# but you can check it by running `csm-orc entrypoint --help`\nENTRYPOINT [\"csm-orc\", \"entrypoint\"]\n</code></pre>"},{"location":"examples/minimal_docker/#build-the-image","title":"Build the image","text":"<p>The image can be simply built using the following command:</p> Build the docker image<pre><code>docker build . -t minimal_docker_orchestrator\n</code></pre>"},{"location":"examples/minimal_docker/#run-the-image","title":"Run the image","text":"<p>The image can then be run using the following command:</p> Run the docker image<pre><code>docker run example_orc\n</code></pre>"},{"location":"examples/minimal_docker/#possible-environment-variables-with-the-cosmo-tech-api","title":"Possible environment variables with the Cosmo Tech API","text":"<p>The Cosmo Tech API can send the following list of environment variable to your docker image which will be  available for any orchestration file you may want to run in it</p> List of environment variables Environment Variable Description AZURE_CLIENT_ID An identifier to an Azure identity defined during the installation of the platform AZURE_CLIENT_SECRET A secret tied to the given client ID allowing to connect with it AZURE_TENANT_ID An identifier of your Azure tenant to be able to connect to it IDENTITY_PROVIDER Will be set to  <code>azure</code> in an Azure based API CSM_API_URL The url to the Cosmo Tech API your are connecting to CSM_API_SCOPE An identifier scope used to get permission to your API CSM_DATASET_ABSOLUTE_PATH A local folder path to which an external volume is mounted to and in which you can write datasets CSM_PARAMETERS_ABSOLUTE_PATH A local folder path to which an external volume is mounted to and in which you can write parameters TWIN_CACHE_HOST The URL to the twin cache service inside the platform (deprecated) TWIN_CACHE_PORT The port to the twin cache service inside the platform (deprecated) TWIN_CACHE_PASSWORD The password to the twin cache service inside the platform (deprecated) TWIN_CACHE_USERNAME The username to the twin cache service inside the platform (deprecated) CSM_SIMULATION_ID The  <code>Simulation</code> ID for your current scenario run AZURE_DATA_EXPLORER_RESOURCE_URI The URI used to query an Azure Data Explorer Cluster tied to your  <code>Workspace</code> AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI The URI used to send data to an  <code>Azure Data Explorer</code> Cluster tied to your  <code>Workspace</code> AZURE_DATA_EXPLORER_DATABASE_NAME The name of the database of your  <code>Workspace</code> in  <code>Azure Data Explorer</code> CSM_ORGANIZATION_ID The ID of your  <code>Organization</code> in the Cosmo Tech API CSM_WORKSPACE_ID The ID of your  <code>Workspace</code> in the Cosmo Tech API CSM_SCENARIO_ID The ID of your  <code>Scenario</code> in the Cosmo Tech API CSM_RUN_TEMPLATE_ID The ID of your  <code>Run Template</code> in the Cosmo Tech API (as defined in your Solution) CSM_CONTAINER_MODE Will always be <code>csm-orc</code> left for compatibility with pre 3.0 API CSM_ENTRYPOINT_LEGACY Will always be  <code>false</code> CSM_PROBES_MEASURES_TOPIC An  <code>amqp</code> address used by the simulator to send your probe data to ADX via Event Hub CSM_CONTROL_PLANE_TOPIC An  <code>amqp</code> address used by the simulator to send your control info to ADX via Event Hub (mostly number of measures sent) CSM_SIMULATION The  <code>Simulation</code> file that should be used to run your simulation (this value is defined in your  <code>Run Template</code> and targets one of the files in the <code>Simulation/</code> folder)"},{"location":"examples/simple_script_run/","title":"Simple Script Run","text":""},{"location":"examples/simple_script_run/#description","title":"Description","text":"<p>This simple example runs a script called <code>my_script.py</code>.</p>"},{"location":"examples/simple_script_run/#example-call","title":"Example call","text":"my_script.py<pre><code>print(\"hello world!\")\n</code></pre> <pre><code>csm-orc run run.json\n</code></pre>"},{"location":"examples/simple_script_run/#template","title":"Template","text":"run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"Run\",\n      \"description\": \"Simple Run of a python script\",\n      \"command\": \"python\",\n      \"arguments\": [\n        \"my_script.py\"\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"examples/simple_simulation_run/","title":"Simple Simulation Run","text":""},{"location":"examples/simple_simulation_run/#description","title":"Description","text":"<p>This simple example make use of the <code>main</code> executable created when a Cosmo Tech simulator is built.</p> <p>To use it locally you can add <code>Generated/Build/Bin</code> to your current <code>PATH</code> or just use <code>csm exec</code> if you have set up <code>csmcli</code> on your system.</p>"},{"location":"examples/simple_simulation_run/#example-call","title":"Example call","text":"<pre><code>export CSM_SIMULATION=MySimulation\ncsm exec csm-orc run run.json\n</code></pre>"},{"location":"examples/simple_simulation_run/#template","title":"Template","text":"run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"Run\",\n      \"description\": \"Simple Run of a Cosmo Tech Simulator\",\n      \"command\": \"main\",\n      \"arguments\": [\n        \"-i\",\n        \"$CSM_SIMULATION\"\n      ],\n      \"environment\": {\n        \"CSM_SIMULATION\": {\n          \"description\": \"The simulation file that will be run\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"tutorial/","title":"Tutorials","text":"<p>A list of tutorials to start getting used to the run-orchestrator</p> <p> My first orchestration</p> <p>A first look at how the orchestrator works, how to create commands and run them in order</p> <p> My first orchestration</p> <p> Concerning configuration</p> <p>Now that we know how to run commands we want to configure them</p> <p> Concerning configuration</p> <p> Integration with a Cosmo Tech Simulator</p> <p>A more in depth use of the orchestrator in conjunction with a Cosmo Tech Simulator</p> <p> Integration with a Cosmo Tech Simulator</p> <p> Make a Cosmo Tech Simulator cloud-ready</p> <p>A more in depth use of the orchestrator in conjunction with a Cosmo Tech Simulator, now with docker images</p> <p> Make a Cosmo Tech Simulator cloud-ready</p> <p> Plugins and Command Templates</p> <p>A deep dive into the Library and Plugins concepts</p> <p> Plugins and Command Templates</p> <p> Exit handlers</p> <p>How to add exit handlers on your orchestration systems using the library</p> <p> Exit Handlers</p>"},{"location":"tutorial/advanced_cosmotech_simulator/","title":"Make a Cosmo Tech Simulator cloud-ready","text":"<p>In this tutorial we will take our updated Brewery Simulator project as we left it in the previous tutorial and add modification to get it ready to be used inside a Cosmo Tech Platform.</p> <p>Requirements</p> <ul> <li><code>docker</code></li> <li>A Cosmo Tech Platform minimal version of 3.0</li> <li>A Cosmo Tech SDK minimal version of 10.0</li> <li>Installed SDK package must include <code>csmcli</code></li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#how-does-the-cosmo-tech-platform-runs-orchestration","title":"How does the Cosmo Tech Platform runs orchestration?","text":"<p>The Cosmo Tech Platform will run pre-registered <code>docker</code> images based on the definition of <code>Solutions</code> in its API.</p> <p>In the API you can define a <code>Solution</code> that will refer to a specific version of a <code>docker</code> image in a given repository. That <code>Solution</code> defines sets of <code>Parameters</code> and <code>Run Templates</code>.  Then <code>Workspaces</code> are defined in the API and point to a given <code>Solution</code>  allowing you to create a <code>Scenario</code> which will tie together <code>Datasets</code>, <code>Parameters</code>,  and a <code>Run Template</code> which will then be run by the API.</p> <p><code>Datasets</code> are a description of how and where data are stored, <code>Parameters</code> can be simple types  or full <code>Datasets</code> allowing you to update the main <code>Dataset</code> of your <code>Scenario</code>, therefore changing its initial state or behavior (or both).</p> <p>Running your <code>Scenario</code> will create a <code>ScenarioRun</code> into the API  and that <code>ScenarioRun</code> will make use of the <code>docker</code> image your previously defined. The API will call the image with an <code>Entrypoint</code> called <code>entrypoint.py</code> and that call should be your full orchestration.</p> Why <code>entrypoint.py</code> and not <code>csm-orc</code> ? <p>The definition of the <code>Entrypoint</code> being <code>entrypoint.py</code>  is left for compatibility with old images on the Cosmo Tech API (pre 3.0). It will be changed in the future, but for now <code>csm-orc</code> comes bundled with  a script called <code>entrypoint.py</code> that allows both legacy and new runs of the <code>docker</code> image.</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#how-does-entrypointpy-works","title":"How does <code>entrypoint.py</code> works?","text":"<p>The <code>entrypoint.py</code> command (and its equivalent <code>csm-orc entrypoint</code>) works using some Environment variables to switch between 3 modes:</p> <ul> <li>The general entrypoint with no special configuration that allow to run your <code>run templates</code> requiring the environment variable <code>CSM_RUN_TEMPLATE_ID</code> to be set with your run template name.</li> <li>The legacy entrypoint activated by setting the environment variable <code>CSM_ENTRYPOINT_LEGACY</code> to <code>true</code> which is made available for compatibility with pre 3.0 Cosmo Tech API.</li> <li>The direct simulator mode which requires the environment variable <code>CSM_RUN_TEMPLATE_ID</code> to not be set, and will then run the simulator by passing it any argument of the command.</li> </ul> <p>Every <code>Environment Variable</code> passed to the command will be forwarded to the <code>csm-orc run</code> command inside, and the command will be run with the working directory set to <code>/pkg/share</code>.</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#which-environment-variables-are-made-available-by-the-api","title":"Which <code>Environment Variables</code> are made available by the API?","text":"<p>The Cosmo Tech API will forward a set of environment variables to any Simulator containers. You can find the full list in the following table.</p> List of environment variables Environment Variable Description AZURE_CLIENT_ID An identifier to an Azure identity defined during the installation of the platform AZURE_CLIENT_SECRET A secret tied to the given client ID allowing to connect with it AZURE_TENANT_ID An identifier of your Azure tenant to be able to connect to it IDENTITY_PROVIDER Will be set to  <code>azure</code> in an Azure based API CSM_API_URL The url to the Cosmo Tech API your are connecting to CSM_API_SCOPE An identifier scope used to get permission to your API CSM_DATASET_ABSOLUTE_PATH A local folder path to which an external volume is mounted to and in which you can write datasets CSM_PARAMETERS_ABSOLUTE_PATH A local folder path to which an external volume is mounted to and in which you can write parameters TWIN_CACHE_HOST The URL to the twin cache service inside the platform (deprecated) TWIN_CACHE_PORT The port to the twin cache service inside the platform (deprecated) TWIN_CACHE_PASSWORD The password to the twin cache service inside the platform (deprecated) TWIN_CACHE_USERNAME The username to the twin cache service inside the platform (deprecated) CSM_SIMULATION_ID The  <code>Simulation</code> ID for your current scenario run AZURE_DATA_EXPLORER_RESOURCE_URI The URI used to query an Azure Data Explorer Cluster tied to your  <code>Workspace</code> AZURE_DATA_EXPLORER_RESOURCE_INGEST_URI The URI used to send data to an  <code>Azure Data Explorer</code> Cluster tied to your  <code>Workspace</code> AZURE_DATA_EXPLORER_DATABASE_NAME The name of the database of your  <code>Workspace</code> in  <code>Azure Data Explorer</code> CSM_ORGANIZATION_ID The ID of your  <code>Organization</code> in the Cosmo Tech API CSM_WORKSPACE_ID The ID of your  <code>Workspace</code> in the Cosmo Tech API CSM_SCENARIO_ID The ID of your  <code>Scenario</code> in the Cosmo Tech API CSM_RUN_TEMPLATE_ID The ID of your  <code>Run Template</code> in the Cosmo Tech API (as defined in your Solution) CSM_CONTAINER_MODE Will always be <code>csm-orc</code> left for compatibility with pre 3.0 API CSM_ENTRYPOINT_LEGACY Will always be  <code>false</code> CSM_PROBES_MEASURES_TOPIC An  <code>amqp</code> address used by the simulator to send your probe data to ADX via Event Hub CSM_CONTROL_PLANE_TOPIC An  <code>amqp</code> address used by the simulator to send your control info to ADX via Event Hub (mostly number of measures sent) CSM_SIMULATION The  <code>Simulation</code> file that should be used to run your simulation (this value is defined in your  <code>Run Template</code> and targets one of the files in the <code>Simulation/</code> folder)"},{"location":"tutorial/advanced_cosmotech_simulator/#connect-to-the-api-to-get-our-scenario-data","title":"Connect to the API to get our <code>Scenario</code> data","text":"<p>Multiple ways exists to connect to the API and query some data, but for simplicity there exists a command in <code>csm-data</code> that will make use of known API environment variables and do the work for you.</p> <p>What is <code>csm-data</code></p> <p><code>csm-data</code> is a data oriented CLI part of the library <code>CosmoTech-Acceleration-Library</code> (abreviated as <code>CoAL</code>)  </p> <p>It is made to have pre-made commands to facilitate use of most of the services a modelisator/integrator could require while working on a run template  </p> <p>You can get it by installing <code>CoAL</code> starting with version <code>0.7.0</code> How to install CoAL and csm-data<pre><code>pip install CosmoTech-Acceleration-Library~=0.7.0\n</code></pre></p> <p>That command is <code>csm-data api scenariorun-load-data</code> (documentation of the command is available here).</p> <p>The command makes use of 5 environment variables set by the API (as described in the previous section):</p> <ul> <li><code>CSM_ORGANIZATION_ID</code></li> <li><code>CSM_WORKSPACE_ID</code></li> <li><code>CSM_SCENARIO_ID</code></li> <li><code>CSM_DATASET_ABSOLUTE_PATH</code></li> <li><code>CSM_PARAMETERS_ABSOLUTE_PATH</code></li> </ul> <p>And uses 3 control environment variables:</p> <ul> <li><code>WRITE_JSON</code>: If set to <code>true</code> will write a <code>parameters.json</code> file in <code>CSM_PARAMETERS_ABSOLUTE_PATH</code>.</li> <li><code>WRITE_CSV</code>: If set to <code>true</code> will write a <code>parameters.csv</code> file in <code>CSM_PARAMETERS_ABSOLUTE_PATH</code>.</li> <li><code>FETCH_DATASET</code>: If set to <code>true</code> will download all the <code>Datasets</code> tied to your scenario,       will write the main ones (not defined as a <code>Parameter</code>) in <code>CSM_DATASET_ABSOLUTE_PATH</code>       and will write the others in <code>CSM_PARAMETERS_ABSOLUTE_PATH/[parameter name]</code>       where <code>[parameter name]</code> is the name of the <code>Parameter</code> targeting the <code>Dataset</code> (with a type set to <code>%DATASETID%</code>).</li> </ul> <p>With that command one can easily download any dataset defined in the Cosmo Tech API,  as long as those datasets use one of the standard connections defined in the API  (as of version 3.0: <code>Azure Blob Storage</code>, <code>Azure Digital Twin</code>, <code>TwinGraph Storage</code>).</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#combine-everything-in-a-run-template","title":"Combine everything in a <code>Run Template</code>","text":"<p>Using all those new information we can see that most of the actions needed to run our code based on API data are already prepackaged.</p> <p>We can:</p> <ul> <li>Download our scenario information using <code>csm-data api scenariorun-load-data</code>.</li> <li>Apply our parameters with our <code>apply_parameters.py</code>.</li> <li>Run our simulation using <code>csm-orc run-step</code>.</li> <li>And send our simulation results to an external system (here Azure Data Explorer) by setting environment variables during the <code>run-step</code>.</li> </ul> <p>It is then easy to update our previous <code>run.json</code> to take those changes into account.</p> New <code>code/run_templates/orchestrator_tutorial_2</code> folder <p>To keep a clean distinction on the code of the previous tutorial and this one,  we will refer to the folder <code>code/run_templates/orchestrator_tutorial_2</code>  which is an exact copy of the folder <code>code/run_templates/orchestrator_tutorial_1</code>.</p> <p>You can create it by using the following command: copy `orchestrator_tutorial_1`<pre><code>cp -r code/run_templates/orchestrator_tutorial_1 code/run_templates/orchestrator_tutorial_2\n</code></pre></p> code/run_templates/orchestrator_tutorial2/run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"DownloadScenarioData\",\n      \"command\": \"csm-data\",\n      \"description\": \"Connect to the Cosmo Tech API to download dataset and parameters\",\n      \"arguments\": [\n        \"api\", \n        \"scenariorun-load-data\",\n        \"--write-json\"\n      ],\n      \"useSystemEnvironment\": true,\n      \"environment\": {\n        \"CSM_API_URL\": {\n          \"description\": \"The URL used to query your Cosmo Tech API instance\"\n        },\n        \"CSM_API_SCOPE\": {\n          \"description\": \"The scope of identification used to request access token for your Cosmo Tech API instance\"\n        },\n        \"CSM_ORGANIZATION_ID\": {\n          \"description\": \"The id of the organization in the Cosmo Tech API\"\n        },\n        \"CSM_WORKSPACE_ID\": {\n          \"description\": \"The id of the workspace in the Cosmo Tech API\"\n        },\n        \"CSM_SCENARIO_ID\": {\n          \"description\": \"The id of the scenario in the Cosmo Tech API\"\n        },\n        \"CSM_DATASET_ABSOLUTE_PATH\": {\n          \"description\": \"The path used to store the datasets of the scenario\"\n        },\n        \"CSM_PARAMETERS_ABSOLUTE_PATH\": {\n          \"description\": \"The path used to store the parameters of the scenario\"\n        }\n      }\n    },\n    {\n      \"id\": \"ApplyParameters\",\n      \"command\": \"python\",\n      \"arguments\": [\n        \"code/run_templates/orchestrator_tutorial_2/apply_parameters.py\",\n        \"$CSM_DATASET_ABSOLUTE_PATH\",\n        \"$CSM_DATASET_ABSOLUTE_PATH\",\n        \"$CSM_PARAMETERS_ABSOLUTE_PATH/parameters.json\"\n      ],\n      \"description\": \"Apply our parameters to the dataset\",\n      \"environment\": {\n        \"CSM_DATASET_ABSOLUTE_PATH\": {\n          \"description\": \"The path to the dataset to update\",\n          \"defaultValue\": \"Simulation/Resource/scenariorun-data\"\n        },\n        \"CSM_PARAMETERS_ABSOLUTE_PATH\": {\n          \"description\": \"The path to a folder containing our parameters.json file\",\n          \"defaultValue\": \"code/run_templates/orchestrator_tutorial_2\"\n        }\n      },\n      \"precedents\": [\n        \"DownloadScenarioData\"\n      ]\n    },\n    {\n      \"id\": \"SimulationRun\",\n      \"command\": \"csm-orc\",\n      \"arguments\": [\n        \"run-step\",\n        \"--template\",\n        \"orchestrator_tutorial_2\",\n        \"--steps\",\n        \"engine\"\n      ],\n      \"description\": \"Runs the simulation targeted by CSM_SIMULATION\",\n      \"useSystemEnvironment\": true,\n      \"environment\": {\n        \"CSM_SIMULATION\": {\n          \"description\": \"The simulation file to run\",\n          \"defaultValue\": \"BusinessApp_Simulation\"\n        }\n      },\n      \"precedents\": [\n        \"ApplyParameters\"\n      ]\n    }\n  ]\n}\n</code></pre> <p>We can see a few changes and additions compared to the previous <code>run.json</code> file:</p> <ul> <li>We created a new <code>step</code> called <code>DownloadScenarioData</code> that makes use of <code>csm-data api scenariorun-load-data</code>:<ul> <li>In this step we defined a few environment variables required to run it,    but we still added <code>useSystemEnvironment</code> to <code>true</code> to ensure any environment variable required    to connect to the API is made available as well.</li> </ul> </li> <li>In the <code>ApplyParameters</code> we made a few changes:<ul> <li><code>DATASET/PARAMETERS_PATH</code> became <code>CSM_DATASET/PARAMETERS_ABSOLUTE_PATH</code>.</li> <li>We added <code>/parameters.json</code> in the arguments for the parameters path.</li> <li>We added a precendent step to schedule it after the <code>DownloadScenarioData</code>.</li> </ul> </li> <li>In the <code>SimulatorRun</code> step changes are minimal:<ul> <li>The template targeted is the new <code>orchestrator_tutorial_2</code>.</li> <li>The default value of <code>CSM_SIMULATION</code> has been changed to <code>BusinessApp_Simulation</code>    since <code>docker</code> simulation can't make use of visual consumers.</li> </ul> </li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#build-a-docker-image","title":"Build a docker image","text":"<p>Now that we have our <code>run.json</code> ready we can build our docker image.</p> Build a docker image using csmcli<pre><code># First we will clean everything to ensure a correct generation of the project\ncsm clean\n# Now we can build our full project\ncsm flow\n# The simulator is now ready to be packaged\ncsm docker build\n</code></pre> <p>After running those commands we end up with a docker image <code>cosmotech/mybrewery_simulator</code> ready to be used.</p> <p>A simple test can be made with the following command:</p> Test the docker image<pre><code>docker run -e CSM_RUN_TEMPLATE_ID=orchestrator_tutorial_1 -e CSM_SIMULATION=BusinessApp_Simulation -v ./Simulation/Resource/scenariorun-data:/mnt/scenariorun-data cosmotech/mybrewery_simulator\n</code></pre> <p>About the parameters of the command <code>docker run</code></p> <ul> <li><code>-e</code> sets an environment variable during the docker run, here we set our run template id and our simulation.</li> <li><code>-v</code> sets a volume during the docker run,    here we mount our local <code>Simulation/Resource/scenariorun-data</code> folder to the path <code>/mnt/scenariorun-data</code>    in the <code>docker</code> container, allowing us to use our existing dataset during the run.</li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#define-api-items","title":"Define API items","text":"<p>The following sections give you simple examples of <code>.yaml</code> files used to define resources in the Cosmo Tech API.</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#define-a-solution","title":"Define a <code>Solution</code>","text":"<p>An example of <code>Solution.yaml</code> (a file used by the Cosmo Tech API) for our current solution would be:</p> Solution.yaml<pre><code>key: \"brewery\"\nname: \"Demo Brewery Solution, csm-orc tutorial\"\ndescription: \"A simple example of a Cosmo Tech solution built using the Brewery model\"\ntags:\n  - \"csm-orc\"\n  - \"Brewery\"\nrepository: \"mybrewery_simulator\"\nversion: \"0.0.1\"\nparameters:\n  - id: \"Stock\"\n    varType: \"int\"\n    defaultValue: 100\n  - id: \"RestockQty\"\n    varType: \"int\"\n    defaultValue: 25\n  - id: \"NbWaiters\"\n    varType: \"int\"\n    defaultValue: 5\nparameterGroups:\n  - id: bar_parameters\n    parameters:\n      - Stock\n      - RestockQty\n      - NbWaiters\nrunTemplates:\n  - id: \"orchestrator_tutorial_2\"\n    name: \"Basic what-if\"\n    description: \"Basic what-if simulation\"\n    parameterGroups:\n      - bar_parameters\n    csmSimulation: BusinessApp_Simulation\n</code></pre> <p>Full Open API description of a <code>Solution</code> is available here.</p> Open API description of a Solution (<code>components.schemas</code>) <pre><code>    Solution:\n      type: object\n      x-class-extra-annotation: \"@com.redis.om.spring.annotations.Document\"\n      description: a version of a Solution\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@org.springframework.data.annotation.Id\"\n          readOnly: true\n          description: the Solution version unique identifier\n        organizationId:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          type: string\n          readOnly: true\n          description: the Organization unique identifier\n        key:\n          type: string\n          description: the Solution key which group Solution versions\n        name:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Searchable\"\n          description: the Solution name\n        description:\n          type: string\n          description: the Solution description\n        repository:\n          type: string\n          description: the registry repository containing the image\n        csmSimulator:\n          type: string\n          description: the main Cosmo Tech simulator name used in standard Run Template\n        version:\n          type: string\n          description: the Solution version MAJOR.MINOR.PATCH. Must be aligned with an existing repository tag\n        ownerId:\n          type: string\n          readOnly: true\n          description: the User id which own this Solution\n        sdkVersion:\n          type: string\n          description: the MAJOR.MINOR version used to build this solution\n        url:\n          type: string\n          description: an optional URL link to solution page\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n        parameters:\n          type: array\n          description: the list of Run Template Parameters\n          items:\n            $ref: '#/components/schemas/RunTemplateParameter'\n        parameterGroups:\n          type: array\n          description: the list of parameters groups for the Run Templates\n          items:\n            $ref: '#/components/schemas/RunTemplateParameterGroup'\n        runTemplates:\n          type: array\n          description: list of Run Template\n          items:\n            $ref: '#/components/schemas/RunTemplate'\n        security:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          allOf:\n            - $ref: '#/components/schemas/SolutionSecurity'\n  #       required:\n  #         - key\n  #         - name\n  #         - repository\n  #         - version\n  #         - runTemplates\n    SolutionSecurity:\n      type: object\n      description: the Solution security information\n      properties:\n        default:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the role by default\n        accessControlList:\n          type: array\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the list which can access this Solution with detailed access control information\n          items:\n            $ref: '#/components/schemas/SolutionAccessControl'\n      required:\n        - default\n        - accessControlList\n    SolutionAccessControl:\n      type: object\n      description: a Solution access control item\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the identity id\n        role:\n          type: string\n          description: a role\n      required:\n        - id\n        - role\n    SolutionRole:\n      type: object\n      description: the Solution Role\n      properties:\n        role:\n          type: string\n          description: the Solution Role\n      required:\n        - role\n    RunTemplate:\n      type: object\n      description: a Solution Run Template\n      properties:\n        id:\n          type: string\n          description: the Solution Run Template id\n        name:\n          type: string\n          description: the Run Template name\n          deprecated: true\n        labels:\n          $ref: '#/components/schemas/TranslatedLabels'\n        description:\n          type: string\n          description: the Run Template description\n        csmSimulation:\n          type: string\n          description: the Cosmo Tech simulation name. This information is send to the Engine. Mandatory information if no Engine is defined\n        tags:\n          type: array\n          description: the list of Run Template tags\n          items:\n            type: string\n        computeSize:\n          type: string\n          description: the compute size needed for this Run Template. Standard sizes are basic and highcpu. Default is basic\n        runSizing:\n          description: definition of resources needed for the scenario run\n          $ref: \"#/components/schemas/RunTemplateResourceSizing\"\n        noDataIngestionState:\n          type: boolean\n          description: set to true if the run template does not want to check data ingestion state (no probes or not control plane)\n        fetchDatasets:\n          type: boolean\n          description: whether or not the fetch dataset step is done\n        scenarioDataDownloadTransform:\n          type: boolean\n          description: whether or not the scenario data download transform step step is done\n        fetchScenarioParameters:\n          type: boolean\n          description: whether or not the fetch parameters step is done\n        applyParameters:\n          type: boolean\n          description: whether or not the apply parameter step is done\n        validateData:\n          type: boolean\n          description: whether or not the validate step is done\n        sendDatasetsToDataWarehouse:\n          type: boolean\n          description: whether or not the Datasets values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting\n        sendInputParametersToDataWarehouse:\n          type: boolean\n          description: whether or not the input parameters values are send to the DataWarehouse prior to Simulation Run. If not set follow the Workspace setting\n        preRun:\n          type: boolean\n          description: whether or not the pre-run step is done\n        run:\n          type: boolean\n          description: whether or not the run step is done\n        postRun:\n          type: boolean\n          description: whether or not the post-run step is done\n        parametersJson:\n          type: boolean\n          description: whether or not to store the scenario parameters in json instead of csv\n        parametersHandlerSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        datasetValidatorSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        preRunSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        runSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        postRunSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        scenariodataTransformSource:\n          $ref: \"#/components/schemas/RunTemplateStepSource\"\n        parameterGroups:\n          type: array\n          description: the ordered list of parameters groups for the Run Template\n          items:\n            type: string\n            description: a Run Template Group Parameter id\n        stackSteps:\n          type: boolean\n          description: whether or not to stack adjacent scenario run steps in one container run which will chain steps\n        gitRepositoryUrl:\n          type: string\n          description: an optional URL to the git repository\n        gitBranchName:\n          type: string\n          description: an optional git branch name\n        runTemplateSourceDir:\n          type: string\n          description: an optional directory where to find the run template source\n        orchestratorType:\n          $ref: \"#/components/schemas/RunTemplateOrchestrator\"\n        executionTimeout:\n          type: integer\n          description: an optional duration in seconds in which a workflow is allowed to run\n        deleteHistoricalData:\n          $ref: \"#/components/schemas/DeleteHistoricalData\"\n      required:\n        - id\n#         - name\n    DeleteHistoricalData:\n      type: object\n      description: Configuration of scenario runs deletion automatic mecanism\n      properties:\n        enable:\n          type: boolean\n          description: Activate or Deactivate historical data deletion\n          default: true\n        pollFrequency:\n          type: integer\n          description: define the polling frequency of scenario run status (in millis)\n          default: 10000\n        timeOut:\n          type: integer\n          description: define the polling timeout\n          default: 28800\n      required:\n        - enable\n\n    RunTemplateOrchestrator:\n      type: string\n      description: the Orchestrator to use for the Run Template\n      enum:\n        - argoWorkflow\n        - csmOrc\n    RunTemplateHandlerId:\n      type: string\n      description: the Run Template step handler identifier\n      enum: [\"parameters_handler\",\"validator\",\"prerun\",\"engine\",\"postrun\",\"scenariodata_transform\"]\n    RunTemplateStepSource:\n      type: string\n      description: the source local, cloud or git repository\n      enum: [\"cloud\",\"git\",\"local\",\"platform\"]\n    RunTemplateResourceSizing:\n      type: object\n      description: a description object for resource requests and limits (default same configuration as basic sizing)\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceSizeInfo'\n        limits:\n          $ref: '#/components/schemas/ResourceSizeInfo'\n      required:\n        - requests\n        - limits\n    ResourceSizeInfo:\n      type: object\n      description: define cpus and memory needs\n      properties:\n        cpu:\n          type: string\n          description: define cpu needs\n        memory:\n          type: string\n          description: define memory needs\n      required:\n        - cpu\n        - memory\n    RunTemplateParameterGroup:\n      type: object\n      description: a Parameter Group for a Run Template\n      properties:\n        id:\n          type: string\n          description: the Parameter Group id\n        labels:\n          $ref: '#/components/schemas/TranslatedLabels'\n        isTable:\n          type: boolean\n          description: does the group define a table\n        options:\n          type: object\n          description: freeform options\n          additionalProperties: true\n        parentId:\n          type: string\n          description: the Run Template Group parent Id\n        parameters:\n          type: array\n          description: an ordered list of Run Template Parameters\n          items:\n            type: string\n            description: a Run Template Parameter id\n      required:\n        - id\n#\u00a0        - labels\n#\u00a0        - parameters\n    RunTemplateParameter:\n      type: object\n      description: a Run Template Parameter\n      properties:\n        id:\n          type: string\n          description: the Parameter id\n        labels:\n          $ref: '#/components/schemas/TranslatedLabels'\n        varType:\n          type: string\n          description: the variable type for the parameter. Basic types or special type %DATASETID%\n        defaultValue:\n          type: string\n          description: the default value for this parameter\n        minValue:\n          type: string\n          description: the minimum value for this parameter\n        maxValue:\n          type: string\n          description: the maximum value for this parameter\n        regexValidation:\n          type: string\n          description: a regex to validate the value\n        options:\n          type: object\n          description: freeform options\n          additionalProperties: true\n      required:\n        - id\n#         - labels\n#         - varType\n    TranslatedLabels:\n      type: object\n      description: a translated label with key as ISO 639-1 code\n      additionalProperties:\n        type: string\n</code></pre> <p>Once this file is sent to a Cosmo Tech API we will get a <code>Solution ID</code> of the form <code>sol-xxxxxxxx</code> which will allow us to create further elements inside the API referencing our solution.</p> <p>Now let's look deeper at how to create our <code>Solution.yaml</code>.</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#solution-description","title":"<code>Solution</code> description","text":"Solution.yaml - description<pre><code>key: \"brewery\"\nname: \"Demo Brewery Solution, csm-orc tutorial\"\ndescription: \"A simple example of a Cosmo Tech solution built using the Brewery model\"\ntags:\n  - \"csm-orc\"\n  - \"Brewery\"\nrepository: \"mybrewery_simulator\"\nversion: \"0.0.1\"\n</code></pre> <p>We can see a few important properties in this part of the <code>Solution</code> file:</p> <ul> <li><code>key</code>: it is a \"grouping\" value used to make multiple <code>Solution</code> using the same base but different versions together.</li> <li><code>name</code>: a simple name given to the <code>Solution</code>.</li> <li><code>description</code>: a simple description of the <code>Solution</code>.</li> <li><code>tags</code>: a list of tags used in the API to filter <code>Solution</code> resources.</li> <li><code>repository</code>: the name of the <code>docker</code> image inside the image registry.</li> <li><code>version</code>: the version of the <code>docker</code> image tied to the <code>Solution</code>.</li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#parameters-and-parametergroups","title":"<code>parameters</code> and <code>parameterGroups</code>","text":"Solution.yaml - parameters<pre><code>parameters:\n  - id: \"Stock\"\n    varType: \"int\"\n    defaultValue: 100\n  - id: \"RestockQty\"\n    varType: \"int\"\n    defaultValue: 25\n  - id: \"NbWaiters\"\n    varType: \"int\"\n    defaultValue: 5\nparameterGroups:\n  - id: bar_parameters\n    parameters:\n      - Stock\n      - RestockQty\n      - NbWaiters\n</code></pre> <p>In this part we declare our scenario parameters. As previously decided we need three parameters:</p> <ul> <li><code>NbWaiters</code></li> <li><code>RestockQty</code></li> <li><code>Stock</code></li> </ul> <p>Each parameter can be given a type (property <code>varType</code>) and a default value (property 'defaultValue'). Then we grouped our <code>parameters</code> in a <code>parametersGroup</code> \"bar_parameters\". Parameter groups will make our parameters available in further part of the <code>Solution</code>.</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#runtemplates","title":"<code>runTemplates</code>","text":"Solution.yaml - runTemplates<pre><code>runTemplates:\n  - id: \"orchestrator_tutorial_2\"\n    name: \"Basic what-if\"\n    description: \"Basic what-if simulation\"\n    parameterGroups:\n      - bar_parameters\n    csmSimulation: BusinessApp_Simulation\n</code></pre> <p>In this part we finally define our <code>Run Template</code> for the API. We have three main elements to define:</p> <ul> <li><code>id</code>: the <code>id</code> of a run template is the name of a folder inside <code>code/run_templates</code> that will contain a <code>run.json</code> file, along with one sub-folder for each step in the run template.</li> <li><code>parameterGroups</code>: list of parameter groups available for the run template. Parameters declared in those groups can be changed by users in order to create new scenarios.</li> <li><code>csmSimulation</code>: the name of a simulation file (without the <code>.sml.xml</code> suffix), to be set in the <code>CSM_SIMULATION_ID</code> environment variable. This simulation will run as part of the run template execution.</li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#define-a-workspace","title":"Define a <code>Workspace</code>","text":"<p>An example of <code>Workspace.yaml</code> which is a file used by the Cosmo Tech API for our current solution would be:</p> Workspace.yaml<pre><code>key: brewery_orchestrator_tutorial\nname: Brewery tutorial workspace\nsolution:\n  solutionId: \"sol-xxxxxxxx\"\n</code></pre> <p>Full Open API description of a <code>Workspace</code> is available here.</p> Open API description of a Workspace (<code>components.schemas</code>) <pre><code>    Workspace:\n      type: object\n      x-class-extra-annotation: \"@com.redis.om.spring.annotations.Document\"\n      description: a Workspace\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@org.springframework.data.annotation.Id\"\n          readOnly: true\n          description: Workspace unique identifier generated by the API\n          example: \"w-0123456789ab\"\n        organizationId:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          type: string\n          readOnly: true\n          description: Organization unique identifier under which the workspace resides\n          example: \"o-0123456789ab\"\n        key:\n          type: string\n          description: technical key for resource name convention and version grouping. Must be unique\n          example: \"MyKey\"\n        name:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Searchable\"\n          description: Workspace name. This name is display in the sample webApp\n          example: \"FranceOffice\"\n        description:\n          type: string\n          description: the Workspace description\n        linkedDatasetIdList:\n          type: array\n          description: list of dataset linked to this dataset\n          items:\n            type: string\n        version:\n          type: string\n          description: the Workspace version MAJOR.MINOR.PATCH.\n          example: \"1.0.0\"\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n        ownerId:\n          type: string\n          readOnly: true\n          description: the user id which own this workspace. set by the API from Authentification service receved id\n        solution:\n          $ref: '#/components/schemas/WorkspaceSolution'\n        webApp:\n          $ref: '#/components/schemas/WorkspaceWebApp'\n        sendInputToDataWarehouse:\n          type: boolean\n          description: default setting for all Scenarios and Run Templates to set whether or not the Dataset values and the input parameters values are send to the DataWarehouse prior to the ScenarioRun\n        useDedicatedEventHubNamespace:\n          type: boolean\n          default: false\n          description: Set this property to true to use a dedicated Azure Event Hub Namespace for this Workspace.\n            The Event Hub Namespace must be named \\'&lt;organization_id\\&gt;-&lt;workspace_id\\&gt;\\' (in lower case).\n            This Namespace must also contain two Event Hubs named \\'probesmeasures\\' and \\'scenariorun\\'.\n        dedicatedEventHubSasKeyName:\n          type: string\n          description: the Dedicated Event Hub SAS key name, default to RootManageSharedAccessKey. Use the /secret endpoint to set the key value\n        dedicatedEventHubAuthenticationStrategy:\n          type: string\n          description: the Event Hub authentication strategy, SHARED_ACCESS_POLICY or TENANT_CLIENT_CREDENTIALS. Default to the one defined for the tenant.\n        sendScenarioRunToEventHub:\n          type: boolean\n          default : true\n          description: default setting for all Scenarios and Run Templates to set whether or not the ScenarioRun is send to the Event Hub\n        sendScenarioMetadataToEventHub:\n          type: boolean\n          default: false\n          description: Set this property to false to not send scenario metada to Azure Event Hub Namespace for this Workspace.\n            The Event Hub Namespace must be named \\'&lt;organization_id\\&gt;-&lt;workspace_id\\&gt;\\' (in lower case).\n            This Namespace must also contain two Event Hubs named \\'scenariometadata\\' and \\'scenariorunmetadata\\'.\n        datasetCopy:\n          type: boolean\n          default: true\n          description: Activate the copy of dataset on scenario creation, meaning that each scenario created in this workspace\n            will make this copy. when false, scenario use directly the dataset specified.\n        security:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          allOf:\n           - $ref: '#/components/schemas/WorkspaceSecurity'\n      required:\n        - key\n        - name\n        - solution\n    WorkspaceSecurity:\n      type: object\n      description: the workspace security information\n      properties:\n        default:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the role by default\n        accessControlList:\n          type: array\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the list which can access this Workspace with detailed access control information\n          items:\n            $ref: '#/components/schemas/WorkspaceAccessControl'\n      required:\n        - default\n        - accessControlList\n    WorkspaceAccessControl:\n      type: object\n      description: a Workspace access control item\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the identity id\n        role:\n          type: string\n          description: a role\n      required:\n        - id\n        - role\n    WorkspaceRole:\n      type: object\n      description: the Workspace Role\n      properties:\n        role:\n          type: string\n          description: the Workspace Role\n      required:\n        - role\n    WorkspaceFile:\n      type: object\n      description: a Workspace File resource\n      properties:\n        fileName:\n          type: string\n          description: the Workspace File name\n    WorkspaceWebApp:\n      type: object\n      description: a Workspace Web Application\n      properties:\n        url:\n          type: string\n          description: the Workspace Web Application URL\n        iframes:\n          type: object\n          description: a map of iframeKey/iframeURL\n          additionalProperties: true\n        options:\n          type: object\n          description: free form options for Web Application\n          additionalProperties: true\n      required:\n        - url\n    WorkspaceSolution:\n      type: object\n      description: the Workspace Solution configuration\n      properties:\n        solutionId:\n          type: string\n          description: the Solution Id attached to this workspace\n        runTemplateFilter:\n          type: array\n          description: the list of Solution Run Template Id to filter\n          items:\n            type: string\n        defaultRunTemplateDataset:\n          type: object\n          description: a map of RunTemplateId/DatasetId to set a default dataset for a Run Template\n          additionalProperties: true\n      # required:\n        # - solutionId\n    WorkspaceSecret:\n      type: object\n      description: the secret definition\n      properties:\n        dedicatedEventHubKey:\n          type: string\n          description: the dedicated event hub shared access key\n</code></pre> <p>After creating a <code>Workspace</code> resource using the API you will need to create additional resources for it in your platform if you want to run scenarios.</p> <p>Once your <code>Workspace</code> is created you will get a workspace identifier of the form <code>w-xxxxxxxx</code>. It will allow you to connect to your workspace and reference it in other resources.</p> <p>We have 3 required parts in a <code>Workspace</code>:</p> <ul> <li><code>key</code>: a unique identifier for your workspace which will be used during resource creation.</li> <li><code>name</code>: the name of your <code>Workspace</code>.</li> <li><code>solution.solutionId</code>: the solution identifier (<code>sol-xxxxxxxx</code>) for the solution you want to use in your workspace.</li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#define-a-dataset","title":"Define a <code>Dataset</code>","text":"<p>An example of <code>Dataset.yaml</code> which is a file used by the Cosmo Tech API for our current solution would be:</p> Dataset.yaml<pre><code>name: Orchestrator Tutorial Dataset\ndescription: Example dataset defined during the Orchestrator Tutorial\ntags:\n  - Brewery\n  - Tutorial\n</code></pre> <p>Full Open API description of a <code>Dataset</code> is available here.</p> Open API description of a Dataset (<code>components.schemas</code>) <pre><code>    FileUploadValidation:\n      type: object\n      description: files read on upload\n      properties:\n        nodes:\n          type: array\n          description: list of filename found on nodes folder\n          items:\n            $ref: '#/components/schemas/FileUploadMetadata'\n        edges:\n          type: array\n          description: list of filename found on edges folder\n          items:\n            $ref: '#/components/schemas/FileUploadMetadata'\n    FileUploadMetadata:\n      type: object\n      properties:\n        name:\n          type: string\n        size:\n          type: integer\n    DatasetSearch:\n      type: object\n      description: the search options\n      properties:\n        datasetTags:\n          type: array\n          description: the dataset tag list to search\n          items:\n            type: string\n      required:\n        - datasetTags\n    Dataset:\n      type: object\n      x-class-extra-annotation: \"@com.redis.om.spring.annotations.Document\"\n      description: a Dataset\n      properties:\n        id:\n          x-field-extra-annotation: \"@org.springframework.data.annotation.Id\"\n          type: string\n          readOnly: true\n          description: the Dataset unique identifier\n        name:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Searchable\"\n          type: string\n          description: the Dataset name\n        description:\n          type: string\n          description: the Dataset description\n        ownerId:\n          type: string\n          readOnly: true\n          description: the User id which own this Dataset\n        ownerName:\n          type: string\n          readOnly: true\n          description: the name of the owner\n        organizationId:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          type: string\n          readOnly: true\n          description: the Organization Id related to this Dataset\n        parentId:\n          type: string\n          description: the Dataset id which is the parent of this Dataset\n        linkedWorkspaceIdList:\n          type: array\n          description: list of workspace linked to this dataset\n          items:\n            type: string\n        twingraphId:\n          type: string\n          description: the twin graph id\n        main:\n          type: boolean\n          description: is this the main dataset\n        creationDate:\n          type: integer\n          format: int64\n          readOnly: true\n          description: the Dataset creation date\n        refreshDate:\n          type: integer\n          format: int64\n          readOnly: true\n          description: the last time a refresh was done\n        sourceType:\n          $ref: '#/components/schemas/DatasetSourceType'\n        source:\n          $ref: '#/components/schemas/SourceInfo'\n        ingestionStatus:\n          type: string\n          description: the Dataset ingestion status\n          enum:\n            - NONE\n            - PENDING\n            - ERROR\n            - SUCCESS\n        twincacheStatus:\n          type: string\n          description: the twincache data status\n          enum:\n            - EMPTY\n            - FULL\n        queries:\n          type: array\n          description: the list of queries\n          items:\n            type: string\n        tags:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          type: array\n          description: the list of tags\n          items:\n            type: string\n        connector:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          type: object\n          description: the Connector setup bound to a Dataset\n          properties:\n            id:\n              type: string\n              x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n              description: the Connector id\n            name:\n              type: string\n              x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n              description: the Connector name\n            version:\n              type: string\n              description: the Connector version\n            parametersValues:\n              type: object\n              additionalProperties:\n                type: string\n            #      required:\n            #       - id\n        fragmentsIds:\n          type: array\n          description: the list of other Datasets ids to compose as fragments\n          items:\n            type: string\n        validatorId:\n          type: string\n          description: the validator id\n        compatibility:\n          type: array\n          description: the list of compatible Solutions versions\n          items:\n            $ref: '#/components/schemas/DatasetCompatibility'\n        security:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          allOf:\n            - $ref: '#/components/schemas/DatasetSecurity'\n    #      required:\n    #        - name\n    #        - connector\n    DatasetSecurity:\n      type: object\n      description: the dataset security information\n      properties:\n        default:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the role by default\n        accessControlList:\n          type: array\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the list which can access this Dataset with detailed access control information\n          items:\n            $ref: '#/components/schemas/DatasetAccessControl'\n      required:\n        - default\n        - accessControlList\n    DatasetAccessControl:\n      type: object\n      description: a Dataset access control item\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the identity id\n        role:\n          type: string\n          description: a role\n      required:\n        - id\n        - role\n    DatasetRole:\n      type: object\n      description: the Dataset Role\n      properties:\n        role:\n          type: string\n          description: the Dataset Role\n      required:\n        - role\n    DatasetSourceType:\n      type: string\n      description: the Dataset Source Type\n      enum:\n        - ADT\n        - AzureStorage\n        - File\n        - None\n        - Twincache\n    DatasetTwinGraphInfo:\n      type: object\n      description: a twin graph query in cypher language\n      properties:\n        jobId:\n          type: string\n          description: the import job id\n        datasetId:\n          type: string\n          description: the Dataset id\n        status:\n          type: string\n          description: Twingraph status\n    DatasetTwinGraphQuery:\n      type: object\n      description: a twin graph query in cypher language\n      properties:\n        query:\n          type: string\n          description: the query in cypher language\n      required:\n        - query\n    DatasetTwinGraphHash:\n      type: object\n      description: a twin graph hash\n      properties:\n        hash:\n          type: string\n          description: the hash of the graph\n    DatasetCompatibility:\n      type: object\n      description: a Dataset compatibility constraint to a Solution version open range\n      properties:\n        solutionKey:\n          type: string\n          description: the Solution key which group Solution versions\n        minimumVersion:\n          type: string\n          description: the Solution minimum version compatibility (version included)\n        maximumVersion:\n          type: string\n          description: the Solution maximum version compatibility (version included)\n      required:\n        - solutionKey\n    Validator:\n      type: object\n      description: a Validator to validate a Dataset\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Validator id\n        name:\n          type: string\n          description: the Validator name\n        description:\n          type: string\n          description: the Validator description\n        repository:\n          type: string\n          description: the registry repository containing the Validator image\n        version:\n          type: string\n          description: the Validator version MAJOR.MINOR.PATCH. Must be aligned with an existing repository tag\n        ownerId:\n          type: string\n          readOnly: true\n          description: the User id which own this Validator\n        url:\n          type: string\n          description: an optional URL link to Validator page\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n      required:\n        - id\n        - name\n        - repository\n        - version\n    ValidatorRun:\n      type: object\n      description: a Validator Run\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Validator Run id\n        validatorId:\n          type: string\n          readOnly: true\n          description: the Validator id\n        validatorName:\n          type: string\n          readOnly: true\n          description: the validator name\n        datasetId:\n          type: string\n          description: the Dataset id to run the validator on\n        datasetName:\n          type: string\n          readOnly: true\n          description: the Dataset name\n        state:\n          type: string\n          readOnly: true\n          description: the Validator Run state\n          enum: [\"Running\",\"Finished\",\"OnError\"]\n        containerId:\n          type: string\n          readOnly: true\n          description: the Validator Run container id\n        logs:\n          type: string\n          readOnly: true\n          description: the Validator Run logs\n      required:\n        - datasetId\n    DatasetCopyParameters:\n      type: object\n      description: the Dataset Copy Parameters\n      properties:\n        sourceId:\n          type: string\n          description: the source Dataset id\n        targetId:\n          type: string\n          description: the target Dataset id\n        options:\n          type: object\n          description: freeform options to path to connectors\n          additionalProperties: true\n    SubDatasetGraphQuery:\n      type: object\n      description: a twin graph query in cypher language\n      properties:\n        name:\n          type: string\n          description: the name of the subdataset\n        description:\n          type: string\n          description: the description of the subdataset\n        queries:\n          type: array\n          description: the query in cypher language\n          items:\n            type: string\n        main:\n          type: boolean\n          description: is this the main dataset\n    SourceInfo:\n      type: object\n      description: Source job import information\n      properties:\n        name:\n          type: string\n          description: the source name containing the files to import\n        location:\n          type: string\n          description: the source location containing the files to import\n        path:\n          type: string\n          description: the source location containing the files to import\n        jobId:\n          type: string\n          description: indicate the last import jobId\n      required:\n        - location\n    TwinGraphBatchResult:\n      type: object\n      description: Processing result\n      properties:\n        totalLines:\n          type: integer\n        processedLines:\n          type: integer\n        errors:\n          type: array\n          items:\n            type: string\n      required:\n        - totalLines\n        - processedLines\n        - errors\n    GraphProperties:\n      type: object\n      properties:\n        type:\n          type: string\n          description: the type of the relationship\n        source:\n          type: string\n          description: the source node of the relationship\n        target:\n          type: string\n          description: the target node of the relationship\n        name:\n          type: string\n          description: the name of the graph data object\n        params:\n          type: string\n          description: the parameters of the graph data object\n</code></pre> <p>A <code>Dataset</code> is defined by a name, a type of data source (property <code>sourceType</code>) and a twin graph identifier (property <code>twingraphId</code>). After creating your <code>Dataset</code> you will get an identifier of the form <code>d-xxxxxxxx</code> which will be used to reference it to your scenarios.</p>"},{"location":"tutorial/advanced_cosmotech_simulator/#define-a-scenario","title":"Define a <code>Scenario</code>","text":"<p>An example of <code>Scenario.yaml</code> which is a file used by the Cosmo Tech API for our current solution would be :</p> Scenario.yaml<pre><code>name: Orchestrator Tutorial\ndescription: Scenario of the Orchestrator tutorial\ntags:\n  - Brewery\n  - Orchestrator Tutorial\nrunTemplateId: orchestrator_tutorial_2\ndatasetList:\n  - 'd-xxxxxxxx'\nparametersValues:\n  - parameterId: Stock\n    varType: int\n    value: 200\n  - parameterId: RestockQty\n    varType: int\n    value: 50\n  - parameterId: NbWaiters\n    varType: int\n    value: 10\n</code></pre> <p>Full Open API description of a <code>Scenario</code> is available here</p> Open API description of a Scenario (<code>components.schemas</code>) <pre><code>    Scenario:\n      type: object\n      x-class-extra-annotation: \"@com.redis.om.spring.annotations.Document\"\n      description: a Scenario with base information\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@org.springframework.data.annotation.Id\"\n          readOnly: true\n          description: the Scenario unique identifier\n        name:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Searchable\"\n          description: the Scenario name\n        description:\n          type: string\n          description: the Scenario description\n        tags:\n          type: array\n          description: the list of tags\n          items:\n            type: string\n        parentId:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the Scenario parent id\n        ownerId:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          readOnly: true\n          description: the user id which own this Scenario\n        rootId:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          readOnly: true\n          description: the scenario root id\n        solutionId:\n          type: string\n          readOnly: true\n          description: the Solution Id associated with this Scenario\n        runTemplateId:\n          type: string\n          description: the Solution Run Template Id associated with this Scenario\n        organizationId:\n            type: string\n            x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n            readOnly: true\n            description: the associated Organization Id\n        workspaceId:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          readOnly: true\n          description: the associated Workspace Id\n        state:\n          $ref: '#/components/schemas/ScenarioJobState'\n        creationDate:\n          type: integer\n          format: int64\n          readOnly: true\n          description: the Scenario creation date\n        lastUpdate:\n          type: integer\n          format: int64\n          readOnly: true\n          description: the last time a Scenario was updated\n        ownerName:\n          type: string\n          readOnly: true\n          description: the name of the owner\n        solutionName:\n          type: string\n          readOnly: true\n          description: the Solution name\n        runTemplateName:\n          type: string\n          readOnly: true\n          description: the Solution Run Template name associated with this Scenario\n        datasetList:\n          type: array\n          description: the list of Dataset Id associated to this Scenario Run Template\n          items:\n            type: string\n        runSizing:\n          description: definition of resources needed for the scenario run\n          $ref: \"#/components/schemas/ScenarioResourceSizing\"\n        parametersValues:\n          type: array\n          description: the list of Solution Run Template parameters values\n          items:\n            $ref: '#/components/schemas/ScenarioRunTemplateParameterValue'\n        lastRun:\n          allOf:\n            - $ref: '#/components/schemas/ScenarioLastRun'\n            - type: object\n              description: the last Scenario Run for this Scenario\n        parentLastRun:\n          allOf:\n            - $ref: '#/components/schemas/ScenarioLastRun'\n            - type: object\n              description: the last Scenario Run for the parent of this Scenario\n        rootLastRun:\n          allOf:\n            - $ref: '#/components/schemas/ScenarioLastRun'\n            - type: object\n              description: the last Scenario Run for the root (master) of Scenario\n        validationStatus:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Searchable\"\n          allOf:\n            - $ref: '#/components/schemas/ScenarioValidationStatus'\n        security:\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          allOf:\n            - $ref: '#/components/schemas/ScenarioSecurity'\n#      required:\n#        - name\n#        - runTemplateId\n    ScenarioSecurity:\n      type: object\n      description: the Scenario security information\n      properties:\n        default:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the role by default\n        accessControlList:\n          type: array\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the list which can access this Scenario with detailed access control information\n          items:\n            $ref: '#/components/schemas/ScenarioAccessControl'\n      required:\n        - default\n        - accessControlList\n    ScenarioAccessControl:\n      type: object\n      description: a Scenario access control item\n      properties:\n        id:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: the identity id\n        role:\n          type: string\n          x-field-extra-annotation: \"@com.redis.om.spring.annotations.Indexed\"\n          description: a role\n      required:\n        - id\n        - role\n    ScenarioRole:\n      type: object\n      description: the Scenario Role\n      properties:\n        role:\n          type: string\n          description: the Scenario Role\n      required:\n        - role\n    ScenarioResourceSizing:\n      type: object\n      description: a description object for resource requests and limits (default same configuration as basic sizing)\n      properties:\n        requests:\n          $ref: '#/components/schemas/ResourceSizeInfo'\n        limits:\n          $ref: '#/components/schemas/ResourceSizeInfo'\n      required:\n        - requests\n        - limits\n    ResourceSizeInfo:\n      type: object\n      description: define cpus and memory needs\n      properties:\n        cpu:\n          type: string\n          description: define cpu needs\n        memory:\n          type: string\n          description: define memory needs\n      required:\n        - cpu\n        - memory\n    ScenarioLastRun:\n      type: object\n      properties:\n        scenarioRunId:\n          type: string\n          description: the last Scenario Run id\n        csmSimulationRun:\n          type: string\n          description: the last Cosmo Tech Simulation Run id\n        workflowId:\n          type: string\n          description: the last Workflow Id\n        workflowName:\n          type: string\n          description: the last Workflow name\n    ScenarioRunTemplateParameterValue:\n      type: object\n      description: the value of a Solution Run Template parameter for a Scenario\n      properties:\n        parameterId:\n          type: string\n          description: the parameter Id\n        varType:\n          type: string\n          readOnly: true\n          description: the parameter value type\n        value:\n          type: string\n          description: the parameter value\n        isInherited:\n          type: boolean\n          description: whether or not the value is inherited from parent or has been changed\n      required:\n        - parameterId\n        - value\n    ScenarioComparisonResult:\n      type: object\n      description: the result of the comparison of two scenarios\n      properties:\n        scenarioId:\n          type: string\n          readOnly: true\n          description: the Scenario Id which is the reference for the comparison\n        comparedScenarioId:\n          type: string\n          readOnly: true\n          description: the Scenario Id the reference Scenario is compared to\n        changedValues:\n          type: array\n          readOnly: true\n          description: the list of changed values for parameters\n          items:\n            $ref: '#/components/schemas/ScenarioChangedParameterValue'\n    ScenarioChangedParameterValue:\n      type: object\n      description: the difference between the values of a parameter\n      properties:\n        parameterId:\n          type: string\n          readOnly: true\n          description: the parameter id the values refer to\n        varType:\n          type: string\n          readOnly: true\n          description: the parameter value type\n        value:\n          type: string\n          readOnly: true\n          description: the parameter value for the reference Scenario\n        comparedValue:\n          type: string\n          readOnly: true\n          description: the parameter value for the compared Scenario\n    ScenarioDataDownloadInfo:\n      type: object\n      description: Scenario data download job info\n      properties:\n        url:\n          type: string\n          readOnly: true\n          description: the Scenario Data Download URL\n        state:\n          $ref: '#/components/schemas/ScenarioJobState'\n    ScenarioDataDownloadJob:\n      type: object\n      description: Scenario data download job\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: the Scenario Data Download job identifier\n    ScenarioJobState:\n      type: string\n      readOnly: true\n      description: the Scenario job state\n      enum:\n        - Created\n        - Running\n        - Successful\n        - Failed\n        # PROD-7888 : When requesting the scenario state right after a run has been submitted,\n        # the scenario run service (e.g., Argo Workflow) might not have scheduled the run\n        # effectively yet.\n        # Furthermore, temporary communication errors might occur anytime when remotely\n        # fetching last scenario run statuses.\n        - Unknown\n        # PROD-7420 : return data ingestion status\n        - DataIngestionInProgress\n    ScenarioValidationStatus:\n      type: string\n      description: the validation status of the scenario\n      enum:\n        - Draft\n        - Rejected\n        - Unknown\n        - Validated\n</code></pre> <p>As a result of creating your <code>Scenario</code> you will get an identifier of the form <code>s-xxxxxxxx</code> that you can use to run it (as we will see further) and reference it in other endpoints.</p> <p>A scenario essentially combines a run template with a dataset. The run template provides a set of parameters that can then be modified by the user before running the scenario. Multiple elements are required for defining a scenario, most notably:</p> <ul> <li><code>runTemplateId</code>: should be one of the run template identifiers defined in our <code>Solution</code>.</li> <li><code>datasetList</code>: should reference a previously defined <code>Dataset</code> using its identifier.</li> <li><code>parametersValues</code>: is a list of objects representing the parameters we defined in the <code>Solution</code>, with the actual values they are set to.</li> </ul>"},{"location":"tutorial/advanced_cosmotech_simulator/#run-our-distant-scenario","title":"Run our distant <code>Scenario</code>","text":"<p>We will need to either use a lot of parameters or environment variables. To make things easier we can make use of a parameter of <code>csm-orc run</code> to generate a template of <code>.env</code> file we will be able to use.</p> <p>That parameter is <code>--gen-env-target</code> and takes a filename to create a <code>.env</code> file initialized with all the environment variables defined in our <code>run.json</code></p> <p>If a variable is set multiple times, only the last one will be taken into account. Each environment variable will have one and only one value from the following list (highest value in the list takes precedence):</p> <ul> <li>The <code>value</code> defined in the <code>run.json</code>.</li> <li>The current value in your working environment.</li> <li>The <code>defaultValue</code> defined in the <code>run.json</code>.</li> <li>The <code>description</code> defined in the <code>run.json</code>.</li> <li><code>None</code> if no other value can be found.</li> </ul> use of --gen-env-target<pre><code>csm-orc run code/run_templates/orchestrator_tutorial_2/run.json --gen-env-target code/run_templates/orchestrator_tutorial_2/vars.env\ncat code/run_templates/orchestrator_tutorial_2/vars.env\n# CSM_API_SCOPE=The scope of identification used to request access token for your Cosmo Tech API instance\n# CSM_API_URL=The URL used to query your Cosmo Tech API instance\n# CSM_DATASET_ABSOLUTE_PATH=Simulation/Resource/scenariorun-data\n# CSM_ORGANIZATION_ID=The identifier of the organization in the Cosmo Tech API\n# CSM_PARAMETERS_ABSOLUTE_PATH=code/run_templates/orchestrator_tutorial_2\n# CSM_SCENARIO_ID=The identifier of the scenario in the Cosmo Tech API\n# CSM_SIMULATION=BusinessApp_Simulation\n# CSM_WORKSPACE_ID=The id of the workspace in the Cosmo Tech API\n</code></pre> <p>This <code>.env</code> file can then be used as a parameter of the <code>docker run</code> command with <code>--env-file</code>  or can be used with a tool like <code>dotenv</code> (<code>pip install dotenv</code>) to temporary set the environment variables of commands.  You can also just load it to get all values in your current environment.</p> load a <code>.env</code> file in bash then run <code>csm-orc</code><code>docker run</code> with <code>.env</code><code>csm-orc run</code> with <code>.env</code> and <code>dotenv</code> <pre><code>set -o allexport\nsource code/run_templates/orchestrator_tutorial_2/vars.env set\n+o allexport\ncsm-orc run code/run_templates/orchestrator_tutorial_2/run.json\n</code></pre> <pre><code>docker run --env-file code/run_templates/orchestrator_tutorial_2/vars.env cosmotech/mybrewery_simulator\n</code></pre> <pre><code>dotenv -e code/run_templates/orchestrator_tutorial_2/vars.env csm-orc run code/run_templates/orchestrator_tutorial_2/run.json\n</code></pre>"},{"location":"tutorial/advanced_cosmotech_simulator/#i-want-to-use-my-local-data-instead-of-needing-a-scenario","title":"I want to use my local data instead of needing a <code>Scenario</code>","text":"<p>The <code>csm-orc run</code> command comes with an optional parameter <code>--skip-step</code> that can be set  in an environment variable <code>CSM_SKIP_STEPS</code>. This parameter can be given a list of steps that will be ignored during the run.</p> <p>Since the \"only\" step used to download distant data from our run is <code>DownloadScenarioData</code> we can simply run locally by skipping it:</p> Running only the SimulationRun step<pre><code>csm-orc run --skip-step DownloadScenarioData --skip-step ApplyParameters code/run_templates/orchestrator_tutorial_2/run.json\n</code></pre>"},{"location":"tutorial/configuration_and_environment/","title":"Concerning configuration","text":"<p>Objective</p> <ul> <li>Add environment variables to our script</li> <li>Use environment variables in our orchestration</li> <li>Use CommandTemplate to combine close commands</li> </ul>"},{"location":"tutorial/configuration_and_environment/#taking-a-look-at-environment-variables","title":"Taking a look at Environment Variables","text":"<p>We will start in the same folder as the previous tutorial : <code>MyFirstOrchestrationProject</code>  and augment it to use some Environment Variables to configure our commands.</p> <p>First we will start by modifying our scripts to now accept an environment variable for the file path</p> FibonacciDisplay fibonacci.py<pre><code>import argparse\nimport os\n\nparser = argparse.ArgumentParser(description=\"Fibonacci printer\")\nparser.add_argument(\"n\",\n                    type=int,\n                    help=\"The max rank of the fibonacci sequence to write\")\nparser.add_argument(\"--filename\",\n                    type=argparse.FileType('w'),\n                    help=\"The file to write to\",\n                    default=os.environ.get(\"FIBO_FILE_PATH\"))\n\n\ndef fibonacci_sequence(n: int = 0):\n    a, b = 0, 1\n    for _ in range(n):\n        yield a\n        a, b = b, a + b\n\n\nif __name__ == \"__main__\":\n    args = parser.parse_args()\n    with args.filename as f:\n        for v in fibonacci_sequence(args.n):\n            f.write(f\"{v}\\n\")\n</code></pre> display_file.py<pre><code>import argparse\nimport os\n\nparser = argparse.ArgumentParser(description=\"File printer\")\nparser.add_argument(\"--filename\",\n                    type=argparse.FileType('r'),\n                    help=\"The file to print\",\n                    default=os.environ.get(\"FIBO_FILE_PATH\"))\n\nif __name__ == \"__main__\":\n    args = parser.parse_args()\n\n    with args.filename as f:\n        for v in f.readlines():\n            print(v.strip())\n</code></pre> <p>Those modifications will allow us to set an Environment Variable <code>FIBO_FILE_PATH</code> that will be used for our file name</p> <p>Let's try our scripts</p> <p>Running those two files is easy <pre><code>export FIBO_FILE_PATH=fib_second.txt\npython fibonacci.py 10\npython display_file.py\n</code></pre> Without environment variable we would run the following commands <pre><code>python fibonacci.py 10 --filename fib_second.txt\npython display_file.py --filename fib_second.txt\n</code></pre> Both ways should display the following lines <pre><code>0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n</code></pre></p> <p>Now that our commands work we will look at the orchestration file to configure those environment variables</p> run_env.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"run-fibo\",\n      \"command\": \"python\",\n      \"arguments\": [ \"fibonacci.py\", \"10\" ],\n      \"environment\": {\n        \"FIBO_FILE_PATH\": {\n          \"description\": \"A file run-fibo will write to\"\n        }\n      }\n    },\n    {\n      \"id\": \"run-display\",\n      \"command\": \"python\",\n      \"arguments\": [ \"display_file.py\" ],\n      \"precedents\": [ \"run-fibo\" ],\n      \"environment\": {\n        \"FIBO_FILE_PATH\": {\n          \"description\": \"A file run-display will read and print to stdout\"}\n      }\n    }\n  ]\n}\n</code></pre> <p>We added 2 definitions of our <code>FIBO_FILE_PATH</code> to the steps, so we can try to run our script</p> Run the orchestrator without the environment variable<pre><code># First we remove the definition of FIBO_FILE_PATH from the environment for the example\nunset FIBO_FILE_PATH\ncsm-orc run run_env.json\n# [YYYY/MM/DD-HH:mm:SS] ERROR    Missing environment values\n# [YYYY/MM/DD-HH:mm:SS] ERROR     - FIBO_FILE_PATH \n# [YYYY/MM/DD-HH:mm:SS] ERROR    Missing environment variables, check the logs\n</code></pre> <p>We can see that without defining our environment variable issues are displayed before the run.</p> <p>If we wanted to know which environment variables are required for our orchestration script we can do the following</p> Getting information about environment variables<pre><code>csm-orc run run_env.json --display-env\n# [YYYY/MM/DD-HH:mm:SS] INFO     Environment variable defined for run_env.json\n# [YYYY/MM/DD-HH:mm:SS] INFO      - FIBO_FILE_PATH:\n#                                   - A file run-fibo will write to\n#                                   - A file run-display will read and print to stdout\n</code></pre> <p>We can see that all descriptions of a variable are made available.</p> <p>Let's give a value to <code>FIBO_FILE_PATH</code> and run our command</p> Run the orchestrator with the environment variable<pre><code>FIBO_FILE_PATH=fib_second.txt csm-orc run run_env.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-display\n# 0\n# 1\n# 1\n# 2\n# 3\n# 5\n# 8\n# 13\n# 21\n# 34\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-display\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-fibo (Done)\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-display (Done)\n</code></pre> <p>We can see that our orchestrator works now.</p>"},{"location":"tutorial/configuration_and_environment/#use-environment-variables-as-argument","title":"Use Environment Variables as Argument","text":"<p>To add more configuration to our file lets use an environment variable for the <code>run-fibo</code> step argument.</p> run_env_arg.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"run-fibo\",\n      \"command\": \"python\",\n      \"arguments\": [ \"fibonacci.py\", \"$FIBO_COUNT\" ],\n      \"environment\": {\n        \"FIBO_FILE_PATH\": {\n          \"description\": \"A file run-fibo will write to\"\n        },\n        \"FIBO_COUNT\": {\n          \"description\": \"The rank of the fibonacci sequence run-fibo will write to\",\n          \"defaultValue\": \"10\"\n        }\n      }\n    },\n    {\n      \"id\": \"run-display\",\n      \"command\": \"python\",\n      \"arguments\": [ \"display_file.py\" ],\n      \"precedents\": [ \"run-fibo\" ],\n      \"environment\": {\n        \"FIBO_FILE_PATH\": {\n          \"description\": \"A file run-display will read and print to stdout\"}\n      }\n    }\n  ]\n}\n</code></pre> <p>In this file we defined an environment variable that will be used as an argument for our command (by using it as an argument preceded by <code>$</code>),  that way we don't need to modify our script.</p> <p>We also defined a <code>defaultValue</code> for the argument,  ensuring that even if the environment variable is not defined a default value is used.</p> Run without the new variableRun with the new variable Run as previously<pre><code>export FIBO_FILE_PATH=fib_second.txt\ncsm-orc run run_env_arg.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-display\n# 0\n# 1\n# 1\n# 2\n# 3\n# 5\n# 8\n# 13\n# 21\n# 34\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-display\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-fibo (Done)\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-display (Done)\n</code></pre> Run the orchestrator with the new environment variable<pre><code>export FIBO_FILE_PATH=fib_second.txt\nexport FIBO_COUNT=8\ncsm-orc run run_env_arg.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-display\n# 0\n# 1\n# 1\n# 2\n# 3\n# 5\n# 8\n# 13\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-display\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-fibo (Done)\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-display (Done)\n</code></pre>"},{"location":"tutorial/configuration_and_environment/#use-commandtemplate-to-reduce-copy","title":"Use CommandTemplate to reduce copy","text":"<p>We now have 2 <code>steps</code> that use the same base <code>command</code> and a common Environment Variable.  Let's make use of the <code>CommandTemplate</code> to reduce the number of time we need to impact our steps.</p> run_with_template.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"run-fibo\",\n      \"commandId\": \"python-with-fibo-file\",\n      \"arguments\": [ \"fibonacci.py\", \"$FIBO_COUNT\" ],\n      \"environment\": {\n        \"FIBO_COUNT\": {\n          \"description\": \"The rank of the fibonacci sequence run-fibo will write to\",\n          \"defaultValue\": \"10\"\n        }\n      }\n    },\n    {\n      \"id\": \"run-display\",\n      \"commandId\": \"python-with-fibo-file\",\n      \"arguments\": [ \"display_file.py\" ],\n      \"precedents\": [ \"run-fibo\" ]\n    }\n  ],\n  \"commandTemplates\": [\n    {\n      \"id\": \"python-with-fibo-file\",\n      \"command\": \"python\",\n      \"environment\": {\n        \"FIBO_FILE_PATH\": {\n          \"description\": \"A file available to the command\"\n        }\n      }\n    }\n  ]\n}\n</code></pre> <p>We grouped the common part of the steps in a new command template called <code>python-with-fibo-file</code>,  then replaced the <code>command</code> of our steps by its <code>commandId</code>.</p> <p>Now we can call the new file as previously</p> Run the orchestrator with a command template<pre><code>export FIBO_FILE_PATH=fib_second.txt\nexport FIBO_COUNT=8 \ncsm-orc run run_with_template.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-display\n# 0\n# 1\n# 1\n# 2\n# 3\n# 5\n# 8\n# 13\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-display\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-fibo (Done)\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-display (Done)\n</code></pre> <p>Now you can create command templates, use environment variables to configure your scripts, and set some values for those.</p>"},{"location":"tutorial/configuration_and_environment/#make-use-of-optional-environment-variables","title":"Make use of optional Environment Variables","text":"<p>In some case you may want to have optional effects that can be used to change your script only if present  (the use of a <code>defaultValue</code> does not make sense for those)</p> <p>For example, we will make a change to the run-display step to either print the content of the file as is,  or if an Environment Variable <code>DISPLAY_SYMBOL</code> is set it will instead display that symbol on each line X times,  where X is the number read from the file.</p> <p>So <code>DISPLAY_SYMBOL=X</code> and <code>FIBO_COUNT=5</code> would look like that:</p> DISPLAY_SYMBOL=X and FIBO_COUNT=5<pre><code>#\n# X\n# X\n# XX\n# XXX\n</code></pre> updated_display.py<pre><code>import argparse\nimport os\n\nparser = argparse.ArgumentParser(description=\"File printer\")\nparser.add_argument(\"--filename\",\n                    type=argparse.FileType('r'),\n                    help=\"The file to print\",\n                    default=os.environ.get(\"FIBO_FILE_PATH\"))\n\ndisplay_symbol = os.environ.get(\"DISPLAY_SYMBOL\")\n\nif __name__ == \"__main__\":\n    args = parser.parse_args()\n\n    with args.filename as f:\n        for v in f.readlines():\n            value = int(v.strip())\n            if display_symbol:\n                print(display_symbol * value)\n            else:\n                print(value)\n</code></pre> <p>And to make use of that new script we can update our <code>.json</code> file as following</p> optional_envvar.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"run-fibo\",\n      \"commandId\": \"python-with-fibo-file\",\n      \"arguments\": [ \"fibonacci.py\", \"$FIBO_COUNT\" ],\n      \"environment\": {\n        \"FIBO_COUNT\": {\n          \"description\": \"The rank of the fibonacci sequence run-fibo will write to\",\n          \"defaultValue\": \"10\"\n        }\n      }\n    },\n    {\n      \"id\": \"run-display\",\n      \"commandId\": \"python-with-fibo-file\",\n      \"arguments\": [ \"updated_display.py\" ],\n      \"environment\": {\n        \"DISPLAY_SYMBOL\": {\n          \"optional\": true,\n          \"description\": \"A symbol used to replace the display of a number by a repetition of it.\"\n        }\n      },\n      \"precedents\": [ \"run-fibo\" ]\n    }\n  ],\n  \"commandTemplates\": [\n    {\n      \"id\": \"python-with-fibo-file\",\n      \"command\": \"python\",\n      \"environment\": {\n        \"FIBO_FILE_PATH\": {\n          \"description\": \"A file available to the command\"\n        }\n      }\n    }\n  ]\n}\n</code></pre> Run without <code>DISPLAY_SYMBOL</code>Run with <code>DISPLAY_SYMBOL</code> <pre><code>export FIBO_FILE_PATH=fib_second.txt\nexport FIBO_COUNT=8 \ncsm-orc run optional_envvar.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-display\n# 0\n# 1\n# 1\n# 2\n# 3\n# 5\n# 8\n# 13\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-display\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-fibo (Done)\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-display (Done)\n</code></pre> <pre><code>export FIBO_FILE_PATH=fib_second.txt\nexport FIBO_COUNT=8 \nexport DISPLAY_SYMBOL=X \ncsm-orc run optional_envvar.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-fibo\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step run-display\n# \n# X\n# X\n# XX\n# XXX\n# XXXXX\n# XXXXXXXX\n# XXXXXXXXXXXXX\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step run-display\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-fibo (Done)\n# [YYYY/MM/DD-HH:mm:SS] INFO     run-display (Done)\n</code></pre>"},{"location":"tutorial/cosmotech_simulator/","title":"Integration with a Cosmo Tech Simulator","text":"<p>Objective</p> <ul> <li>Combine previous tutorials and Cosmo Tech Simulator to be able to apply changes to a simulation instance.</li> </ul> <p>Prerequisites</p> <ul> <li>You need to have completed the \"Brewery\" onboarding for Cosmo Tech projects.</li> <li>You need a local version of the \"Brewery\" solution (full code available here).</li> </ul> <p>Potential Issues</p> <p>A known issue exists with graphical commands.</p>"},{"location":"tutorial/cosmotech_simulator/#reminder-model-project","title":"Reminder : Model + Project","text":"<p>The full simulator files can be found with the tag  Complete-model on the repository.</p> <p>Online view: here</p> Project files<pre><code>MyBrewery/                           |\n\u251c\u2500 ConceptualModel/                  |\n|  \u2514\u2500 MyBrewery.csm.xml              | CoSML Conceptual Model\n\u251c\u2500 Simulation/                       | Simulation instances\n|  \u2514\u2500 Resource/                      | \n|     \u2514\u2500 scenariorun-data/           | Example dataset in CSV\n|        \u2514\u2500 arc_to_Customer.csv      |\n|        \u2514\u2500 Bar.csv                  |\n|        \u2514\u2500 Customer.csv             |\n|     \u2514\u2500 Brewery.ist.xml             | Model instance in XML\n|     \u2514\u2500 CSV_Brewery.ist.xml         | Model instance using CSVs\n|     \u2514\u2500 InstanceCalibration.ini.xml | Initialize an entity using XML\n|  \u2514\u2500 BusinessApp_Simulation.sml.xml | CSV files -&gt; CSV outputs\n|  \u2514\u2500 CSV_Simulation.sml.xml         | CSV files -&gt; graphical results\n|  \u2514\u2500 XML_Simulation.sml.xml         | XML instantiation -&gt; graphical results\n\u251c\u2500 Simulator/                        | \n|  \u2514\u2500 Simulator.sor.xml              | CoSML Simulator\n\u2514\u2500 project.csm                       | Information on your project\n</code></pre> <p>The Brewery conceptual model is very simple: it consists of a Bar entity and a Customer entity,  where the Bar contains the Customer(s).  The Bar can serve the Customers based on customer thirst levels and stock.  It restocks when stock drops below a set restock quantity.</p> <p>Customers have a Thirsty state and a Satisfaction state, which affect each other:  the higher the satisfaction, the higher the chance of becoming thirsty,  and the longer a customer is left thirsty, the lower the satisfaction.  Satisfaction increases when a customer is served.  Satisfaction is also affected by the satisfaction of surrounding customers.</p> <p>For this tutorial we will write our new files in the folder <code>MyBrewery/code/run_templates/orchestrator_tutorial_1</code> (this folder hierarchy will be used in future tutorials too).</p>"},{"location":"tutorial/cosmotech_simulator/#define-a-set-of-parameters-to-apply","title":"Define a set of parameters to apply","text":"<p>In our simulation we will want to see the effects of variations on the Bar attributes.</p> <p>Our existing CSV based simulations look for 3 attributes to instantiate a Bar:</p> <ul> <li><code>NbWaiters</code>: the number of waiters in our Bar</li> <li><code>RestockQty</code>: the quantity of elements to restock when getting below the threshold</li> <li><code>Stock</code>: the Bar initial stock</li> </ul> <p>We will then use those 3 attributes as parameters for our simulations.</p> <p>To store our parameters we will define a JSON file containing them. </p> code/run_templates/orchestrator_tutorial_1/parameters.json<pre><code>[\n  {\n    \"parameterId\": \"Stock\",\n    \"value\": 123\n  },\n  {\n    \"parameterId\": \"RestockQty\",\n    \"value\": 4567\n  },\n  {\n    \"parameterId\": \"NbWaiters\",\n    \"value\": 89\n  }\n]\n</code></pre> About the JSON file format <p>In prevision of future use, we will define a json format close to the one returned by the command: <pre><code>csm-data api scenariorun-load-data\n</code></pre> This command will be used later to download data from the Cosmo Tech API.</p>"},{"location":"tutorial/cosmotech_simulator/#apply-our-parameters","title":"Apply our parameters","text":"<p>Having defined our 3 parameters we can now work on a script to apply those to update a given dataset</p> <p>Our script will consist of 3 steps:</p> <ul> <li>Read the original dataset</li> <li>Apply our parameters to the dataset</li> <li>Write the new dataset in a given folder</li> </ul> <p>We will need 3 parameters for the script:</p> <ul> <li>The path to our original dataset</li> <li>The path to our parameter file</li> <li>The path where we want to write our new dataset</li> </ul> <p>Using those information we can write a simple script:</p> code/run_templates/orchestrator_tutorial_1/apply_parameters.py<pre><code>import argparse\nimport json\nimport pathlib\nfrom csv import DictReader\nfrom csv import DictWriter\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser(description=\"Parameters apply\")\n    parser.add_argument(\"input_path\",\n                        type=str,\n                        help=\"A path containing our original dataset\")\n    parser.add_argument(\"output_path\",\n                        type=str,\n                        help=\"A path where we will write our updated dataset\")\n    parser.add_argument(\"parameters_path\",\n                        type=argparse.FileType('r'),\n                        help=\"A path to a parameters.json file\")\n\n    args = parser.parse_args()\n\n    # Let's make a copy of our original dataset\n    original_dataset_path = pathlib.Path(args.input_path)\n\n    if not original_dataset_path.exists():\n        raise FileNotFoundError(f\"The folder {original_dataset_path} \"\n                                f\"does not exists\")\n\n    dataset_files = dict()\n\n    for _file in original_dataset_path.glob(\"*.csv\"):\n        _file_name = _file.name\n        dataset_files.setdefault(_file_name, [])\n        with _file.open(\"r\") as _file_content:\n            reader = DictReader(_file_content)\n            for row in reader:\n                dataset_files[_file_name].append(row)\n\n    # Now that we made a memory copy of our file let's get our parameters\n\n    with args.parameters_path as _file_parameters:\n        parameters = json.load(_file_parameters)\n        parameters = dict({_p['parameterId']: _p['value']\n                           for _p in parameters})\n\n    # Now we can apply our parameters to our Bar file\n    if 'Bar.csv' not in dataset_files:\n        raise FileNotFoundError(f\"No Bar.csv could be found \"\n                                f\"in the given input folder\")\n\n    bars = dataset_files['Bar.csv']\n\n    for bar in bars:\n        bar['Stock'] = parameters['Stock']\n        bar['NbWaiters'] = parameters['NbWaiters']\n        bar['RestockQty'] = parameters['RestockQty']\n\n    # and now that our dataset got updated we can write it\n\n    target_dataset_path = pathlib.Path(args.output_path)\n    if target_dataset_path.exists() and not target_dataset_path.is_dir():\n        raise FileExistsError(f\"{target_dataset_path} exists \"\n                              f\"and is not a directory\")\n    target_dataset_path.mkdir(parents=True, exist_ok=True)\n\n    for _file_name, _file_content in dataset_files.items():\n        _file_path = target_dataset_path / _file_name\n        with _file_path.open(\"w\") as _file:\n            writer = DictWriter(_file, _file_content[0].keys())\n            writer.writeheader()\n            writer.writerows(_file_content)\n</code></pre> <p>Using that script can do the trick, we can test it :</p> Test run of apply_parameters.py<pre><code>python code/run_templates/orchestrator_tutorial_1/apply_parameters.py Simulation/Resource/scenariorun-data code/run_templates/orchestrator_tutorial_1/scenariorun-data code/run_templates/orchestrator_tutorial_1/parameters.json\ncat code/run_templates/orchestrator_tutorial_1/scenariorun-data/Bar.csv\n# NbWaiters,RestockQty,Stock,id\n# 89,4567,123,MyBar\n</code></pre> <p>We can see that having run the script our <code>Bar.csv</code> got correctly updated with our parameters.</p>"},{"location":"tutorial/cosmotech_simulator/#run-a-simulation-with-our-updated-parameters","title":"Run a simulation with our updated parameters","text":"<p>A limitation on the CoSML language locks the folder used by a simulation to load datasets from.  In the existing model the file <code>Simulation/Resource/CSV_Brewery.ist.xml</code> sets this folder to <code>Simulation/Resource/scenariorun-data</code>. We will have to use that folder to give the simulator access to our dataset.</p> About <code>Simulation/Resource/scenariorun-data</code> <p>The folder <code>Simulation/Resource/scenariorun-data</code> is a special folder: in Cosmo Tech cloud platform (where solutions are packaged as Docker containers),  this folder is replaced by a symbolic link to the path <code>/mnt/scenariorun-data</code>  which is in an environment variable called <code>CSM_DATASET_ABSOLUTE_PATH</code>.</p> <p>We then know that the content of this folder will not be available in a container as is,  and need to keep that in mind for future uses.</p> <p>For simplicity, we won't be making an effort to keep the old values of possibly existing datasets and will overwrite the content instead.</p> <p>It will be attained by using our <code>apply_parameters.py</code> on the same input and output folder (here <code>Simulation/Resource/scenariorun-data</code>)</p> <p>A safer way would be to make a back-up of the dataset and to restore it after the run, but we won't go over this possibility in this tutorial.</p> <p>To run the simulator we can either make use of <code>csmcli</code>, the <code>main</code> executable or <code>csm-orc run-step</code>; we will only cover the <code>csm-orc</code> use in this tutorial.</p> <p>By writing our code in the folder <code>code/run_templates/orchestrator_tutorial_1</code> we declared a Run Template named <code>orchestrator_tutorial_1</code> that we can call in <code>csm-orc</code> commands.</p> <p>The simulator run can be configured by using some options of the <code>csm-orc run-step</code> command:</p> <ul> <li><code>--template orchestrator_tutorial_1</code> is necessary to target a run template (dependency for non-simulator run steps)</li> <li><code>--steps engine</code> will either look for a file <code>engine/main.py</code> in target run template or (if not found and the environment variable <code>CSM_SIMULATION</code> is set) try to run the simulator using a CoSML simulation file.</li> </ul> <p>So the following command will run our <code>CSV_Simulation</code> defined by the <code>Simulation/CSV_Simulation.sml.xml</code>:</p> run CSV_Simulation using csm-orc<pre><code>CSM_SIMULATION=CSV_Simulation csm-orc run-step --template orchestrator_tutorial_1 --steps engine\n</code></pre> <p>Since we did not update our dataset files in place of the original ones (only the <code>engine</code> step was executed) we will get our usual simulation results.</p> <p>Now we can simply run both commands to update our dataset then run the updated simulation:</p> Apply parameters and run simulation<pre><code>python code/run_templates/orchestrator_tutorial_1/apply_parameters.py Simulation/Resource/scenariorun-data Simulation/Resource/scenariorun-data code/run_templates/orchestrator_tutorial_1/parameters.json\nCSM_SIMULATION=CSV_Simulation csm-orc run-step --template ochestrator_tutorial_1 --steps engine \n</code></pre> <p>A different set of charts should appear this time, corresponding to our updated dataset values..</p> <p>Now we can write our <code>run.json</code> file to run those step in a single command.</p> core/run_templates/orchestrator_tutorial_1/run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"ApplyParameters\",\n      \"command\": \"python\",\n      \"arguments\": [\n        \"code/run_templates/orchestrator_tutorial_1/apply_parameters.py\",\n        \"$DATASET_PATH\",\n        \"$DATASET_PATH\",\n        \"$PARAMETERS_PATH\"\n      ],\n      \"description\": \"Apply our parameters to the dataset\",\n      \"environment\": {\n        \"DATASET_PATH\": {\n          \"description\": \"The path to the dataset to update\",\n          \"defaultValue\": \"Simulation/Resource/scenariorun-data\"\n        },\n        \"PARAMETERS_PATH\": {\n          \"description\": \"The path to parameters json file containing our parameters\",\n          \"defaultValue\": \"code/run_templates/orchestrator_tutorial_1/parameters.json\"\n        }\n      }\n    },\n    {\n      \"id\": \"SimulationRun\",\n      \"command\": \"csm-orc\",\n      \"arguments\": [\n        \"run-step\",\n        \"--template\", \"orchestrator_tutorial_1\",\n        \"--steps\", \"engine\"\n      ],\n      \"description\": \"Runs the simulation targeted by CSM_SIMULATION\",\n      \"useSystemEnvironment\": true,\n      \"environment\": {\n        \"CSM_SIMULATION\": {\n          \"description\": \"The simulation file to run\",\n          \"defaultValue\": \"CSV_Simulation\"\n        }\n      },\n      \"precedents\": [\n        \"ApplyParameters\"\n      ]\n    }\n  ]\n}\n</code></pre> <p>Now that we have this <code>run.json</code> file we can run it: run run.json<pre><code>csm-orc run code/run_templates/orchestrator_tutorial_1/run.json\n</code></pre></p> <p>And we are done! Our first simulation based on our parameters file ran in a single command. :)</p> <p>You can now do the next tutorial: \"Make a Cosmo Tech Simulator cloud-ready\".</p>"},{"location":"tutorial/exit_handlers/","title":"Exit handlers","text":"<p>If you ever wanted to have some post orchestration steps that are run regardless of success of failure of the project you can now define exit_handlers using the library.</p>"},{"location":"tutorial/exit_handlers/#what-is-an-exit-handler","title":"What is an exit handler ?","text":"<p>An exit_handler is a common step that will be called after your full orchestration ran. Independent to the results of the steps, allowing you the capacity to do some clean up / reporting / any action required after a run.</p>"},{"location":"tutorial/exit_handlers/#how-to-define-an-exit-handler","title":"How to define an exit handler ?","text":"<p>By making use of the library, you can add a specific template folder called <code>on_exit</code></p> <p>Every template defined in this folder will be registered as an exit handler ensuring it will be ran after the orchestration is finished.</p>"},{"location":"tutorial/exit_handlers/#what-do-i-need-to-know-about-those-handlers","title":"What do I need to know about those handlers ?","text":"<p>First ALL defined exit handlers will be run in alphabetical order, so if you have multiple library plugins adding handlers ALL of those will be run.</p> <p>Second they use the exact same syntax as any command template so you can define environment variables, arguments and more.</p> <p>But one environment variable is added to their list by csm-orc : <code>CSM_ORC_IS_SUCCESS</code> which is a boolean value set to <code>True</code> if the orchestration was a success, and set to <code>False</code> if ANY step failed.</p>"},{"location":"tutorial/getting_started/","title":"My first orchestration","text":"<p>Objective</p> <ul> <li>Set up an orchestration project</li> <li>Create a few scripts to organize</li> <li>Create an orchestration file to run our scripts</li> </ul>"},{"location":"tutorial/getting_started/#setting-up-our-project","title":"Setting up our project","text":"<p>During this tutorial we will start from a clean installation of <code>csm-orc</code> and work our way to an orchestrated solution.</p> Set up our project<pre><code># First we will create a new folder for our project\nmkdir MyFirstOrchestrationProject\ncd MyFirstOrchestrationProject\n# Now that we are in our project folder we will set up the orchestrator using a python venv\n# We create the venv in the folder `.venv`\npython -m venv .venv\n# We activate the venv\n. .venv/bin/activate\n# Now we can install the orchestrator using pip\npip install cosmotech-run-orchestrator\n# We can check that our installation worked by running the orchestrator help\ncsm-orc --help\n</code></pre> <p>After all that our project is ready to start</p>"},{"location":"tutorial/getting_started/#creating-our-first-scripts","title":"Creating our first scripts","text":"<p>In this part we will create 2 simple python script that will interact by using a common file, the first script should write the first N members of the Fibonacci sequence on the file, and the second one will display them.</p> FibonacciDisplay fibonacci.py<pre><code>import argparse\n\nparser = argparse.ArgumentParser(description=\"Fibonacci printer\")\nparser.add_argument(\"n\",\n                    type=int,\n                    help=\"The max rank of the fibonacci sequence to write\")\nparser.add_argument(\"filename\",\n                    type=argparse.FileType('w'),\n                    help=\"The file to write to\")\n\n\ndef fibonacci_sequence(n: int = 0):\n    a, b = 0, 1\n    for _ in range(n):\n        yield a\n        a, b = b, a + b\n\n\nif __name__ == \"__main__\":\n    args = parser.parse_args()\n    with args.filename as f:\n        for v in fibonacci_sequence(args.n):\n            f.write(f\"{v}\\n\")\n</code></pre> display_file.py<pre><code>import argparse\n\nparser = argparse.ArgumentParser(description=\"File printer\")\nparser.add_argument(\"filename\",\n                    type=argparse.FileType('r'),\n                    help=\"The file to print\")\n\nif __name__ == \"__main__\":\n    args = parser.parse_args()\n\n    with args.filename as f:\n        for v in f.readlines():\n            print(v.strip())\n</code></pre> <p>Let's try our scripts</p> <p>Running those two files is easy <pre><code>python fibonacci.py 10 fib.txt\npython display_file.py fib.txt\n</code></pre> This should display the following lines <pre><code>0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n</code></pre></p>"},{"location":"tutorial/getting_started/#write-a-first-orchestration","title":"Write a first orchestration","text":"<p>Now that we have our two files, we want to create an orchestration file to run them.</p> <p>An orchestration file is a json file following the given JSON schema</p> JSON-schema <p>The following schema can be impressive, but we will go through most of it in the next points. JSON-schema<pre><code>{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://cosmotech.com/run_template.schema.json\",\n  \"title\": \"Run Template\",\n  \"description\": \"A run template description\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"commandTemplates\": {\n      \"description\": \"A list of Commands Templates\",\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": \"A Command Template describe a single executable with default properties\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The Id of the Command Template\",\n            \"pattern\": \"^\\\\S*$\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the command template\"\n          },\n          \"command\": {\n            \"type\": \"string\",\n            \"description\": \"The root bash command necessary to execute the template\"\n          },\n          \"arguments\": {\n            \"type\": \"array\",\n            \"description\": \"The list of default arguments passed to the command\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"useSystemEnvironment\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should the system environment be fully passed to the command ?\"\n          },\n          \"environment\": {\n            \"type\": \"object\",\n            \"description\": \"The default list of Environment Variables required for the command\",\n            \"patternProperties\": {\n              \".+\": {\n                \"$ref\": \"#/$defs/environmentVariable\"\n              }\n            },\n            \"minProperties\": 1\n          }\n        },\n        \"additionalProperties\": false,\n        \"required\": [\n          \"id\",\n          \"command\"\n        ]\n      }\n    },\n    \"steps\": {\n      \"description\": \"A list of Steps descriptors\",\n      \"type\": \"array\",\n      \"items\": {\n        \"description\": \"A Step is a single instance of a Command that is scheduled to be run, can use an existing command or define its own\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The Id of the Step\",\n            \"pattern\": \"^\\\\S*$\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"A description of the step (override command template description)\"\n          },\n          \"commandId\": {\n            \"type\": \"string\",\n            \"description\": \"An Id for an existing command\"\n          },\n          \"command\": {\n            \"type\": \"string\",\n            \"description\": \"The root bash command necessary to execute the command\"\n          },\n          \"arguments\": {\n            \"type\": \"array\",\n            \"description\": \"The list of arguments passed to the command (replace the default one)\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"useSystemEnvironment\": {\n            \"type\": \"boolean\",\n            \"description\": \"Should the system environment be fully passed to the command ?\"\n          },\n          \"environment\": {\n            \"type\": \"object\",\n            \"description\": \"The list of Environment Variables defined for the command (replace the default one)\",\n            \"patternProperties\": {\n              \".+\": {\n                \"$ref\": \"#/$defs/environmentVariable\"\n              }\n            },\n            \"minProperties\": 1\n          },\n          \"precedents\": {\n            \"type\": \"array\",\n            \"description\": \"A list of steps that have to be run before this one\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false,\n        \"oneOf\": [\n          {\n            \"required\": [\n              \"id\",\n              \"command\"\n            ]\n          },\n          {\n            \"required\": [\n              \"id\",\n              \"commandId\"\n            ]\n          }\n        ]\n      }\n    }\n  },\n  \"required\": [\n    \"steps\"\n  ],\n  \"$defs\": {\n    \"environmentVariable\": {\n      \"type\": \"object\",\n      \"description\": \"A environment variable descriptor\",\n      \"properties\": {\n        \"defaultValue\": {\n          \"type\": \"string\",\n          \"description\": \"The default value of the required variable, if not set, the variable has to be set in the system\"\n        },\n        \"value\": {\n          \"type\": \"string\",\n          \"description\": \"The effective value of the required variable, will override any system value\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"A description of the required Environment Variable for documentation reasons\"\n        },\n        \"optional\": {\n          \"type\": \"boolean\",\n          \"description\": \"Should the Environment Variable be required for the run of a step ?\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  }\n}\n</code></pre></p>"},{"location":"tutorial/getting_started/#the-first-step","title":"The first step","text":"<p>In the schema we can see that it is divided in two parts :</p> <ul> <li>the CommandTemplate</li> <li>the Step</li> </ul> <p>For this first orchestration file we will only use steps.</p> <p>Let's take a look at an example step</p> simple_step.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"echo-foo-bar\",\n      \"command\": \"echo\",\n      \"arguments\": [ \"foo\", \"bar\" ]\n    }\n  ]\n}\n</code></pre> <p>In this minimal file we can see one <code>step</code> with the id <code>echo-foo-bar</code>  that runs the command <code>echo</code> with the arguments <code>foo</code> and <code>bar</code>.</p> <p>This orchestration file is valid following the JSON schema as we have at least 1 element in <code>steps</code>, and the element as at least an <code>id</code> and a <code>command</code></p> <p>We can run this orchestration file with the following command :</p> run simple_step.json<pre><code>csm-orc run simple_step.json\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===      Run     ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     Starting step echo-foo-bar\n# foo bar\n# [YYYY/MM/DD-HH:mm:SS] INFO     Done running step echo-foo-bar\n# [YYYY/MM/DD-HH:mm:SS] INFO     ===     Results    ===\n# [YYYY/MM/DD-HH:mm:SS] INFO     echo-foo-bar (Done)\n</code></pre> <p>On line 4 we can see the result of the command <code>echo foo bar</code> which is defined in the step.</p> <p>Now using this basis we will write our commands in an orchestration file using the same options as the previous example</p> <p>Let's try our scripts as an orchestration file</p> <p>run.json<pre><code>{\n  \"steps\": [\n    {\n      \"id\": \"run-fibo\",\n      \"command\": \"python\",\n      \"arguments\": [ \"fibonacci.py\", \"10\", \"fib.txt\" ]\n    },\n    {\n      \"id\": \"run-display\",\n      \"command\": \"python\",\n      \"arguments\": [ \"display_file.py\", \"fib.txt\" ],\n      \"precedents\": [ \"run-fibo\" ]\n    }\n  ]\n}\n</code></pre> Now we can run our file using the orchestrator run our first orchestration<pre><code>csm-orc run run.json\n</code></pre></p> <p>In the example <code>run.json</code> you can see on line 12 the apparition of the key-words <code>precedents</code>,  it is used to order our operations.</p> <p>Here by setting the step <code>run-fibo</code> as a precedent to the step <code>run-display</code>  we ensure that the first script will run before the second.</p> <p>And now we created a simple example of orchestration file to run some of our scripts. In the next tutorial we will look at how to use CommandTemplates to re-use possibly complex commands, and Environment Variables to change the effect of our commands.</p>"},{"location":"tutorial/plugins_and_templates/","title":"Plugins and Command Templates","text":"<p> New in 1.2.0 </p> <p>Objectives</p> <ul> <li>Present the Plugins and Library system added in version 1.2.0</li> </ul>"},{"location":"tutorial/plugins_and_templates/#about-the-library","title":"About the Library","text":"<p>The <code>Library</code> is a concept inside <code>csm-orc</code> that allow developers to make common <code>CommandTemplate</code>  available to users without needing to copy-paste an external file.</p> <p>For a user only writing <code>.json</code> orchestrator file it will simply allow him to gain some time in writing  by using ready-made <code>CommandTemplate</code>, for a library developer it is a way to package new <code>CommandTemplate</code>  for <code>csm-orc</code> in his own work.</p> <p>The content of the <code>Library</code> is easily displayable with the command <code>csm-orc list-templates</code>  that will list every existing template in the Library and display their origin.</p>"},{"location":"tutorial/plugins_and_templates/#what-is-a-plugin","title":"What is a Plugin ?","text":"<p>A <code>Plugin</code> is a precisely defined python library. By following a given format it is automatically  picked up by the Library and made available to the users.</p>"},{"location":"tutorial/plugins_and_templates/#how-to-create-a-plugin","title":"How to create a Plugin ?","text":"<p>A <code>Plugin</code> needs the following structure</p> A plugin structure <pre><code>cosmotech/\n\u2514\u2500\u2500 orchestrator_plugins/\n    \u2514\u2500\u2500 my_plugin\n        \u251c\u2500\u2500 __init__.py\n        \u2514\u2500\u2500 templates\n            \u2514\u2500\u2500 ...\n</code></pre> cosmotech/orchestrator_plugins/my_plugin/__init__.py<pre><code>from cosmotech.orchestrator.templates.plugin import Plugin\n\nplugin = Plugin(__file__)\n\n__all__ = [plugin]\n</code></pre> <p>And in the <code>templates</code> folder you can put any <code>.json</code> file containing either one single <code>CommandTemplate</code>  or an orchestration file containing valid <code>CommandTemplate</code></p> json file containing a single <code>CommandTemplate</code>json file containing multiple <code>CommandTemplate</code> <pre><code>{\n  \"id\": \"Example\",\n  \"command\": \"echo\"\n}\n</code></pre> <pre><code>{\n  \"commandTemplates\": [\n    {\n      \"id\": \"Example1\",\n      \"command\": \"echo\"\n    },\n    {\n      \"id\": \"Example2\",\n      \"command\": \"ls\"\n    }\n  ]\n}\n</code></pre> <p>And that is all you need to create a <code>Plugin</code>.</p>"},{"location":"tutorial/plugins_and_templates/#how-to-make-a-plugin-available","title":"How to make a plugin available ?","text":"<p>The <code>Library</code> make use of the <code>Implicit Namespace Packages</code> of <code>python</code> as defined by the PEP-420.</p> <p>To summarize, we can define <code>Namespaces</code> that will be able to be filled across multiple <code>Packages</code>  and here we define the namespace <code>cosmotech.orchestrator_plugins</code> to contain all future <code>Plugins</code>.</p> <p>We can easily add our <code>Plugin</code> by making the <code>cosmotech/</code> folder part of the <code>PYTHONPATH</code>.</p> <p>To do so we can : - Define a standalone python package for our <code>Plugin</code> and users just need to install said package in their python environment to get access to the <code>Plugin</code>. - Add the <code>cosmotech</code> folder inside the installation of our python package so that when users install the package from any source the <code>Plugin</code> gets installed alongside it - Copy the <code>cosmotech</code> folder in the working directory</p>"}]}